[{"name":"DEBUG()","description":"io.github.wax911.library.logger.contract.ILogger.Level.DEBUG","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/-d-e-b-u-g/index.html","searchKeys":["DEBUG","DEBUG()","io.github.wax911.library.logger.contract.ILogger.Level.DEBUG"]},{"name":"DEBUG()","description":"io.github.wax911.library.logger.contract.ILogger.Level.DEBUG","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/-d-e-b-u-g/index.html","searchKeys":["DEBUG","DEBUG()","io.github.wax911.library.logger.contract.ILogger.Level.DEBUG"]},{"name":"ERROR()","description":"io.github.wax911.library.logger.contract.ILogger.Level.ERROR","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR()","io.github.wax911.library.logger.contract.ILogger.Level.ERROR"]},{"name":"ERROR()","description":"io.github.wax911.library.logger.contract.ILogger.Level.ERROR","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR()","io.github.wax911.library.logger.contract.ILogger.Level.ERROR"]},{"name":"INFO()","description":"io.github.wax911.library.logger.contract.ILogger.Level.INFO","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/-i-n-f-o/index.html","searchKeys":["INFO","INFO()","io.github.wax911.library.logger.contract.ILogger.Level.INFO"]},{"name":"INFO()","description":"io.github.wax911.library.logger.contract.ILogger.Level.INFO","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/-i-n-f-o/index.html","searchKeys":["INFO","INFO()","io.github.wax911.library.logger.contract.ILogger.Level.INFO"]},{"name":"NONE()","description":"io.github.wax911.library.logger.contract.ILogger.Level.NONE","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/-n-o-n-e/index.html","searchKeys":["NONE","NONE()","io.github.wax911.library.logger.contract.ILogger.Level.NONE"]},{"name":"NONE()","description":"io.github.wax911.library.logger.contract.ILogger.Level.NONE","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/-n-o-n-e/index.html","searchKeys":["NONE","NONE()","io.github.wax911.library.logger.contract.ILogger.Level.NONE"]},{"name":"VERBOSE()","description":"io.github.wax911.library.logger.contract.ILogger.Level.VERBOSE","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/-v-e-r-b-o-s-e/index.html","searchKeys":["VERBOSE","VERBOSE()","io.github.wax911.library.logger.contract.ILogger.Level.VERBOSE"]},{"name":"VERBOSE()","description":"io.github.wax911.library.logger.contract.ILogger.Level.VERBOSE","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/-v-e-r-b-o-s-e/index.html","searchKeys":["VERBOSE","VERBOSE()","io.github.wax911.library.logger.contract.ILogger.Level.VERBOSE"]},{"name":"WARNING()","description":"io.github.wax911.library.logger.contract.ILogger.Level.WARNING","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/-w-a-r-n-i-n-g/index.html","searchKeys":["WARNING","WARNING()","io.github.wax911.library.logger.contract.ILogger.Level.WARNING"]},{"name":"WARNING()","description":"io.github.wax911.library.logger.contract.ILogger.Level.WARNING","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/-w-a-r-n-i-n-g/index.html","searchKeys":["WARNING","WARNING()","io.github.wax911.library.logger.contract.ILogger.Level.WARNING"]},{"name":"abstract class AbstractDiscoveryPlugin<S : Any>(source: S)","description":"io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPlugin","location":"library/io.github.wax911.library.annotation.processor.plugin.contract/[android-jvm]-abstract-discovery-plugin/index.html","searchKeys":["AbstractDiscoveryPlugin","abstract class AbstractDiscoveryPlugin<S : Any>(source: S)","io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPlugin"]},{"name":"abstract class AbstractDiscoveryPlugin<S : Any>(source: S)","description":"io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPlugin","location":"library/io.github.wax911.library.annotation.processor.plugin.contract/[common]-abstract-discovery-plugin/index.html","searchKeys":["AbstractDiscoveryPlugin","abstract class AbstractDiscoveryPlugin<S : Any>(source: S)","io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPlugin"]},{"name":"abstract class AbstractGraphProcessor","description":"io.github.wax911.library.annotation.processor.contract.AbstractGraphProcessor","location":"library/io.github.wax911.library.annotation.processor.contract/[android-jvm]-abstract-graph-processor/index.html","searchKeys":["AbstractGraphProcessor","abstract class AbstractGraphProcessor","io.github.wax911.library.annotation.processor.contract.AbstractGraphProcessor"]},{"name":"abstract class AbstractGraphProcessor","description":"io.github.wax911.library.annotation.processor.contract.AbstractGraphProcessor","location":"library/io.github.wax911.library.annotation.processor.contract/[common]-abstract-graph-processor/index.html","searchKeys":["AbstractGraphProcessor","abstract class AbstractGraphProcessor","io.github.wax911.library.annotation.processor.contract.AbstractGraphProcessor"]},{"name":"abstract class AbstractLogger(level: ILogger.Level) : ILogger","description":"io.github.wax911.library.logger.core.AbstractLogger","location":"library/io.github.wax911.library.logger.core/[android-jvm]-abstract-logger/index.html","searchKeys":["AbstractLogger","abstract class AbstractLogger(level: ILogger.Level) : ILogger","io.github.wax911.library.logger.core.AbstractLogger"]},{"name":"abstract class AbstractLogger(level: ILogger.Level) : ILogger","description":"io.github.wax911.library.logger.core.AbstractLogger","location":"library/io.github.wax911.library.logger.core/[common]-abstract-logger/index.html","searchKeys":["AbstractLogger","abstract class AbstractLogger(level: ILogger.Level) : ILogger","io.github.wax911.library.logger.core.AbstractLogger"]},{"name":"abstract fun analyzeFragments(graphqlContent: String): Set<FragmentAnalysis>","description":"io.github.wax911.library.annotation.processor.fragment.FragmentAnalyzer.analyzeFragments","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-fragment-analyzer/analyze-fragments.html","searchKeys":["analyzeFragments","abstract fun analyzeFragments(graphqlContent: String): Set<FragmentAnalysis>","io.github.wax911.library.annotation.processor.fragment.FragmentAnalyzer.analyzeFragments"]},{"name":"abstract fun analyzeFragments(graphqlContent: String): Set<FragmentAnalysis>","description":"io.github.wax911.library.annotation.processor.fragment.FragmentAnalyzer.analyzeFragments","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-fragment-analyzer/analyze-fragments.html","searchKeys":["analyzeFragments","abstract fun analyzeFragments(graphqlContent: String): Set<FragmentAnalysis>","io.github.wax911.library.annotation.processor.fragment.FragmentAnalyzer.analyzeFragments"]},{"name":"abstract fun findIssueById()","description":"io.github.wax911.library.helpers.annotations.MockAnnotationStubs.findIssueById","location":"library/io.github.wax911.library.helpers.annotations/[android-jvm]-mock-annotation-stubs/find-issue-by-id.html","searchKeys":["findIssueById","abstract fun findIssueById()","io.github.wax911.library.helpers.annotations.MockAnnotationStubs.findIssueById"]},{"name":"abstract fun findIssueById()","description":"io.github.wax911.library.helpers.annotations.MockAnnotationStubs.findIssueById","location":"library/io.github.wax911.library.helpers.annotations/[common]-mock-annotation-stubs/find-issue-by-id.html","searchKeys":["findIssueById","abstract fun findIssueById()","io.github.wax911.library.helpers.annotations.MockAnnotationStubs.findIssueById"]},{"name":"abstract fun getCurrentUser()","description":"io.github.wax911.library.helpers.annotations.MockAnnotationStubs.getCurrentUser","location":"library/io.github.wax911.library.helpers.annotations/[android-jvm]-mock-annotation-stubs/get-current-user.html","searchKeys":["getCurrentUser","abstract fun getCurrentUser()","io.github.wax911.library.helpers.annotations.MockAnnotationStubs.getCurrentUser"]},{"name":"abstract fun getCurrentUser()","description":"io.github.wax911.library.helpers.annotations.MockAnnotationStubs.getCurrentUser","location":"library/io.github.wax911.library.helpers.annotations/[common]-mock-annotation-stubs/get-current-user.html","searchKeys":["getCurrentUser","abstract fun getCurrentUser()","io.github.wax911.library.helpers.annotations.MockAnnotationStubs.getCurrentUser"]},{"name":"abstract fun getMarketPlaceApps()","description":"io.github.wax911.library.helpers.annotations.MockAnnotationStubs.getMarketPlaceApps","location":"library/io.github.wax911.library.helpers.annotations/[android-jvm]-mock-annotation-stubs/get-market-place-apps.html","searchKeys":["getMarketPlaceApps","abstract fun getMarketPlaceApps()","io.github.wax911.library.helpers.annotations.MockAnnotationStubs.getMarketPlaceApps"]},{"name":"abstract fun getMarketPlaceApps()","description":"io.github.wax911.library.helpers.annotations.MockAnnotationStubs.getMarketPlaceApps","location":"library/io.github.wax911.library.helpers.annotations/[common]-mock-annotation-stubs/get-market-place-apps.html","searchKeys":["getMarketPlaceApps","abstract fun getMarketPlaceApps()","io.github.wax911.library.helpers.annotations.MockAnnotationStubs.getMarketPlaceApps"]},{"name":"abstract fun getOrCreateAPQHash(queryName: String): String?","description":"io.github.wax911.library.persisted.contract.IAutomaticPersistedQuery.getOrCreateAPQHash","location":"library/io.github.wax911.library.persisted.contract/[android-jvm]-i-automatic-persisted-query/get-or-create-a-p-q-hash.html","searchKeys":["getOrCreateAPQHash","abstract fun getOrCreateAPQHash(queryName: String): String?","io.github.wax911.library.persisted.contract.IAutomaticPersistedQuery.getOrCreateAPQHash"]},{"name":"abstract fun getOrCreateAPQHash(queryName: String): String?","description":"io.github.wax911.library.persisted.contract.IAutomaticPersistedQuery.getOrCreateAPQHash","location":"library/io.github.wax911.library.persisted.contract/[common]-i-automatic-persisted-query/get-or-create-a-p-q-hash.html","searchKeys":["getOrCreateAPQHash","abstract fun getOrCreateAPQHash(queryName: String): String?","io.github.wax911.library.persisted.contract.IAutomaticPersistedQuery.getOrCreateAPQHash"]},{"name":"abstract fun getQuery(annotations: Array<out Annotation>): String?","description":"io.github.wax911.library.annotation.processor.contract.AbstractGraphProcessor.getQuery","location":"library/io.github.wax911.library.annotation.processor.contract/[android-jvm]-abstract-graph-processor/get-query.html","searchKeys":["getQuery","abstract fun getQuery(annotations: Array<out Annotation>): String?","io.github.wax911.library.annotation.processor.contract.AbstractGraphProcessor.getQuery"]},{"name":"abstract fun getQuery(annotations: Array<out Annotation>): String?","description":"io.github.wax911.library.annotation.processor.contract.AbstractGraphProcessor.getQuery","location":"library/io.github.wax911.library.annotation.processor.contract/[common]-abstract-graph-processor/get-query.html","searchKeys":["getQuery","abstract fun getQuery(annotations: Array<out Annotation>): String?","io.github.wax911.library.annotation.processor.contract.AbstractGraphProcessor.getQuery"]},{"name":"abstract fun getRepository()","description":"io.github.wax911.library.helpers.annotations.MockAnnotationStubs.getRepository","location":"library/io.github.wax911.library.helpers.annotations/[android-jvm]-mock-annotation-stubs/get-repository.html","searchKeys":["getRepository","abstract fun getRepository()","io.github.wax911.library.helpers.annotations.MockAnnotationStubs.getRepository"]},{"name":"abstract fun getRepository()","description":"io.github.wax911.library.helpers.annotations.MockAnnotationStubs.getRepository","location":"library/io.github.wax911.library.helpers.annotations/[common]-mock-annotation-stubs/get-repository.html","searchKeys":["getRepository","abstract fun getRepository()","io.github.wax911.library.helpers.annotations.MockAnnotationStubs.getRepository"]},{"name":"abstract fun getStorageBucketFiles()","description":"io.github.wax911.library.helpers.annotations.MockAnnotationStubs.getStorageBucketFiles","location":"library/io.github.wax911.library.helpers.annotations/[android-jvm]-mock-annotation-stubs/get-storage-bucket-files.html","searchKeys":["getStorageBucketFiles","abstract fun getStorageBucketFiles()","io.github.wax911.library.helpers.annotations.MockAnnotationStubs.getStorageBucketFiles"]},{"name":"abstract fun getStorageBucketFiles()","description":"io.github.wax911.library.helpers.annotations.MockAnnotationStubs.getStorageBucketFiles","location":"library/io.github.wax911.library.helpers.annotations/[common]-mock-annotation-stubs/get-storage-bucket-files.html","searchKeys":["getStorageBucketFiles","abstract fun getStorageBucketFiles()","io.github.wax911.library.helpers.annotations.MockAnnotationStubs.getStorageBucketFiles"]},{"name":"abstract fun log(level: ILogger.Level, tag: String, message: String, throwable: Throwable? = null)","description":"io.github.wax911.library.logger.contract.ILogger.log","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/log.html","searchKeys":["log","abstract fun log(level: ILogger.Level, tag: String, message: String, throwable: Throwable? = null)","io.github.wax911.library.logger.contract.ILogger.log"]},{"name":"abstract fun log(level: ILogger.Level, tag: String, message: String, throwable: Throwable? = null)","description":"io.github.wax911.library.logger.contract.ILogger.log","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/log.html","searchKeys":["log","abstract fun log(level: ILogger.Level, tag: String, message: String, throwable: Throwable? = null)","io.github.wax911.library.logger.contract.ILogger.log"]},{"name":"abstract fun searchFor()","description":"io.github.wax911.library.helpers.annotations.MockAnnotationStubs.searchFor","location":"library/io.github.wax911.library.helpers.annotations/[android-jvm]-mock-annotation-stubs/search-for.html","searchKeys":["searchFor","abstract fun searchFor()","io.github.wax911.library.helpers.annotations.MockAnnotationStubs.searchFor"]},{"name":"abstract fun searchFor()","description":"io.github.wax911.library.helpers.annotations.MockAnnotationStubs.searchFor","location":"library/io.github.wax911.library.helpers.annotations/[common]-mock-annotation-stubs/search-for.html","searchKeys":["searchFor","abstract fun searchFor()","io.github.wax911.library.helpers.annotations.MockAnnotationStubs.searchFor"]},{"name":"abstract fun startDiscovery(logger: AbstractLogger): Map<String, String>","description":"io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPlugin.startDiscovery","location":"library/io.github.wax911.library.annotation.processor.plugin.contract/[android-jvm]-abstract-discovery-plugin/start-discovery.html","searchKeys":["startDiscovery","abstract fun startDiscovery(logger: AbstractLogger): Map<String, String>","io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPlugin.startDiscovery"]},{"name":"abstract fun startDiscovery(logger: AbstractLogger): Map<String, String>","description":"io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPlugin.startDiscovery","location":"library/io.github.wax911.library.annotation.processor.plugin.contract/[common]-abstract-discovery-plugin/start-discovery.html","searchKeys":["startDiscovery","abstract fun startDiscovery(logger: AbstractLogger): Map<String, String>","io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPlugin.startDiscovery"]},{"name":"abstract val graphFiles: Map<String, String>","description":"io.github.wax911.library.annotation.processor.contract.AbstractGraphProcessor.graphFiles","location":"library/io.github.wax911.library.annotation.processor.contract/[android-jvm]-abstract-graph-processor/graph-files.html","searchKeys":["graphFiles","abstract val graphFiles: Map<String, String>","io.github.wax911.library.annotation.processor.contract.AbstractGraphProcessor.graphFiles"]},{"name":"abstract val graphFiles: Map<String, String>","description":"io.github.wax911.library.annotation.processor.contract.AbstractGraphProcessor.graphFiles","location":"library/io.github.wax911.library.annotation.processor.contract/[common]-abstract-graph-processor/graph-files.html","searchKeys":["graphFiles","abstract val graphFiles: Map<String, String>","io.github.wax911.library.annotation.processor.contract.AbstractGraphProcessor.graphFiles"]},{"name":"abstract var level: ILogger.Level","description":"io.github.wax911.library.logger.contract.ILogger.level","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/level.html","searchKeys":["level","abstract var level: ILogger.Level","io.github.wax911.library.logger.contract.ILogger.level"]},{"name":"abstract var level: ILogger.Level","description":"io.github.wax911.library.logger.contract.ILogger.level","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/level.html","searchKeys":["level","abstract var level: ILogger.Level","io.github.wax911.library.logger.contract.ILogger.level"]},{"name":"annotation class GraphQuery(value: String)","description":"io.github.wax911.library.annotation.GraphQuery","location":"library/io.github.wax911.library.annotation/[android-jvm]-graph-query/index.html","searchKeys":["GraphQuery","annotation class GraphQuery(value: String)","io.github.wax911.library.annotation.GraphQuery"]},{"name":"annotation class GraphQuery(value: String)","description":"io.github.wax911.library.annotation.GraphQuery","location":"library/io.github.wax911.library.annotation/[common]-graph-query/index.html","searchKeys":["GraphQuery","annotation class GraphQuery(value: String)","io.github.wax911.library.annotation.GraphQuery"]},{"name":"class AbstractDiscoveryPluginTest","description":"io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest","location":"library/io.github.wax911.library.annotation.processor.plugin.contract/[android-jvm]-abstract-discovery-plugin-test/index.html","searchKeys":["AbstractDiscoveryPluginTest","class AbstractDiscoveryPluginTest","io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest"]},{"name":"class AbstractDiscoveryPluginTest","description":"io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest","location":"library/io.github.wax911.library.annotation.processor.plugin.contract/[common]-abstract-discovery-plugin-test/index.html","searchKeys":["AbstractDiscoveryPluginTest","class AbstractDiscoveryPluginTest","io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest"]},{"name":"class AbstractLoggerTest","description":"io.github.wax911.library.logger.core.AbstractLoggerTest","location":"library/io.github.wax911.library.logger.core/[android-jvm]-abstract-logger-test/index.html","searchKeys":["AbstractLoggerTest","class AbstractLoggerTest","io.github.wax911.library.logger.core.AbstractLoggerTest"]},{"name":"class AbstractLoggerTest","description":"io.github.wax911.library.logger.core.AbstractLoggerTest","location":"library/io.github.wax911.library.logger.core/[common]-abstract-logger-test/index.html","searchKeys":["AbstractLoggerTest","class AbstractLoggerTest","io.github.wax911.library.logger.core.AbstractLoggerTest"]},{"name":"class AssetManagerDiscoveryPlugin(assetManager: <ERROR CLASS>, targetPath: String, targetExtension: String) : AbstractDiscoveryPlugin<<ERROR CLASS>> ","description":"io.github.wax911.library.annotation.processor.plugin.AssetManagerDiscoveryPlugin","location":"library/io.github.wax911.library.annotation.processor.plugin/[common]-asset-manager-discovery-plugin/index.html","searchKeys":["AssetManagerDiscoveryPlugin","class AssetManagerDiscoveryPlugin(assetManager: <ERROR CLASS>, targetPath: String, targetExtension: String) : AbstractDiscoveryPlugin<<ERROR CLASS>> ","io.github.wax911.library.annotation.processor.plugin.AssetManagerDiscoveryPlugin"]},{"name":"class AssetManagerDiscoveryPlugin(assetManager: AssetManager, targetPath: String, targetExtension: String) : AbstractDiscoveryPlugin<AssetManager> ","description":"io.github.wax911.library.annotation.processor.plugin.AssetManagerDiscoveryPlugin","location":"library/io.github.wax911.library.annotation.processor.plugin/[android-jvm]-asset-manager-discovery-plugin/index.html","searchKeys":["AssetManagerDiscoveryPlugin","class AssetManagerDiscoveryPlugin(assetManager: AssetManager, targetPath: String, targetExtension: String) : AbstractDiscoveryPlugin<AssetManager> ","io.github.wax911.library.annotation.processor.plugin.AssetManagerDiscoveryPlugin"]},{"name":"class AutomaticPersistedQueryCalculator(processor: AbstractGraphProcessor) : IAutomaticPersistedQuery","description":"io.github.wax911.library.persisted.query.AutomaticPersistedQueryCalculator","location":"library/io.github.wax911.library.persisted.query/[android-jvm]-automatic-persisted-query-calculator/index.html","searchKeys":["AutomaticPersistedQueryCalculator","class AutomaticPersistedQueryCalculator(processor: AbstractGraphProcessor) : IAutomaticPersistedQuery","io.github.wax911.library.persisted.query.AutomaticPersistedQueryCalculator"]},{"name":"class AutomaticPersistedQueryCalculator(processor: AbstractGraphProcessor) : IAutomaticPersistedQuery","description":"io.github.wax911.library.persisted.query.AutomaticPersistedQueryCalculator","location":"library/io.github.wax911.library.persisted.query/[common]-automatic-persisted-query-calculator/index.html","searchKeys":["AutomaticPersistedQueryCalculator","class AutomaticPersistedQueryCalculator(processor: AbstractGraphProcessor) : IAutomaticPersistedQuery","io.github.wax911.library.persisted.query.AutomaticPersistedQueryCalculator"]},{"name":"class DefaultGraphLogger(level: ILogger.Level) : AbstractLogger","description":"io.github.wax911.library.logger.DefaultGraphLogger","location":"library/io.github.wax911.library.logger/[android-jvm]-default-graph-logger/index.html","searchKeys":["DefaultGraphLogger","class DefaultGraphLogger(level: ILogger.Level) : AbstractLogger","io.github.wax911.library.logger.DefaultGraphLogger"]},{"name":"class DefaultGraphLogger(level: ILogger.Level) : AbstractLogger","description":"io.github.wax911.library.logger.DefaultGraphLogger","location":"library/io.github.wax911.library.logger/[common]-default-graph-logger/index.html","searchKeys":["DefaultGraphLogger","class DefaultGraphLogger(level: ILogger.Level) : AbstractLogger","io.github.wax911.library.logger.DefaultGraphLogger"]},{"name":"class FragmentPatcher(defaultExtension: String, fragmentAnalyzer: FragmentAnalyzer, logger: AbstractLogger)","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcher","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-fragment-patcher/index.html","searchKeys":["FragmentPatcher","class FragmentPatcher(defaultExtension: String, fragmentAnalyzer: FragmentAnalyzer, logger: AbstractLogger)","io.github.wax911.library.annotation.processor.fragment.FragmentPatcher"]},{"name":"class FragmentPatcher(defaultExtension: String, fragmentAnalyzer: FragmentAnalyzer, logger: AbstractLogger)","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcher","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-fragment-patcher/index.html","searchKeys":["FragmentPatcher","class FragmentPatcher(defaultExtension: String, fragmentAnalyzer: FragmentAnalyzer, logger: AbstractLogger)","io.github.wax911.library.annotation.processor.fragment.FragmentPatcher"]},{"name":"class FragmentPatcherTest","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-fragment-patcher-test/index.html","searchKeys":["FragmentPatcherTest","class FragmentPatcherTest","io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest"]},{"name":"class FragmentPatcherTest","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-fragment-patcher-test/index.html","searchKeys":["FragmentPatcherTest","class FragmentPatcherTest","io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest"]},{"name":"class GraphProcessor(discoveryPlugin: AbstractDiscoveryPlugin<*>, logger: AbstractLogger, fragmentPatcher: FragmentPatcher) : AbstractGraphProcessor","description":"io.github.wax911.library.annotation.processor.GraphProcessor","location":"library/io.github.wax911.library.annotation.processor/[android-jvm]-graph-processor/index.html","searchKeys":["GraphProcessor","class GraphProcessor(discoveryPlugin: AbstractDiscoveryPlugin<*>, logger: AbstractLogger, fragmentPatcher: FragmentPatcher) : AbstractGraphProcessor","io.github.wax911.library.annotation.processor.GraphProcessor"]},{"name":"class GraphProcessor(discoveryPlugin: AbstractDiscoveryPlugin<*>, logger: AbstractLogger, fragmentPatcher: FragmentPatcher) : AbstractGraphProcessor","description":"io.github.wax911.library.annotation.processor.GraphProcessor","location":"library/io.github.wax911.library.annotation.processor/[common]-graph-processor/index.html","searchKeys":["GraphProcessor","class GraphProcessor(discoveryPlugin: AbstractDiscoveryPlugin<*>, logger: AbstractLogger, fragmentPatcher: FragmentPatcher) : AbstractGraphProcessor","io.github.wax911.library.annotation.processor.GraphProcessor"]},{"name":"class GraphProcessorTest","description":"io.github.wax911.library.annotation.processor.GraphProcessorTest","location":"library/io.github.wax911.library.annotation.processor/[android-jvm]-graph-processor-test/index.html","searchKeys":["GraphProcessorTest","class GraphProcessorTest","io.github.wax911.library.annotation.processor.GraphProcessorTest"]},{"name":"class GraphProcessorTest","description":"io.github.wax911.library.annotation.processor.GraphProcessorTest","location":"library/io.github.wax911.library.annotation.processor/[common]-graph-processor-test/index.html","searchKeys":["GraphProcessorTest","class GraphProcessorTest","io.github.wax911.library.annotation.processor.GraphProcessorTest"]},{"name":"class GraphRegexUtilTest(operation: Operation)","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-graph-regex-util-test/index.html","searchKeys":["GraphRegexUtilTest","class GraphRegexUtilTest(operation: Operation)","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest"]},{"name":"class GraphRegexUtilTest(operation: Operation)","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-graph-regex-util-test/index.html","searchKeys":["GraphRegexUtilTest","class GraphRegexUtilTest(operation: Operation)","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest"]},{"name":"class LogLevel","description":"io.github.wax911.library.util.LogLevel","location":"library/io.github.wax911.library.util/[android-jvm]-log-level/index.html","searchKeys":["LogLevel","class LogLevel","io.github.wax911.library.util.LogLevel"]},{"name":"class LogLevel","description":"io.github.wax911.library.util.LogLevel","location":"library/io.github.wax911.library.util/[common]-log-level/index.html","searchKeys":["LogLevel","class LogLevel","io.github.wax911.library.util.LogLevel"]},{"name":"class PersistedQueryHashCalculator(context: <ERROR CLASS>)","description":"io.github.wax911.library.persistedquery.PersistedQueryHashCalculator","location":"library/io.github.wax911.library.persistedquery/[common]-persisted-query-hash-calculator/index.html","searchKeys":["PersistedQueryHashCalculator","class PersistedQueryHashCalculator(context: <ERROR CLASS>)","io.github.wax911.library.persistedquery.PersistedQueryHashCalculator"]},{"name":"class PersistedQueryHashCalculator(context: Context)","description":"io.github.wax911.library.persistedquery.PersistedQueryHashCalculator","location":"library/io.github.wax911.library.persistedquery/[android-jvm]-persisted-query-hash-calculator/index.html","searchKeys":["PersistedQueryHashCalculator","class PersistedQueryHashCalculator(context: Context)","io.github.wax911.library.persistedquery.PersistedQueryHashCalculator"]},{"name":"class PersistedQueryUrlParameterBuilder(queryContainer: QueryContainer, gson: <ERROR CLASS>)","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder","location":"library/io.github.wax911.library.model.request/[common]-persisted-query-url-parameter-builder/index.html","searchKeys":["PersistedQueryUrlParameterBuilder","class PersistedQueryUrlParameterBuilder(queryContainer: QueryContainer, gson: <ERROR CLASS>)","io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder"]},{"name":"class PersistedQueryUrlParameterBuilder(queryContainer: QueryContainer, gson: Gson)","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder","location":"library/io.github.wax911.library.model.request/[android-jvm]-persisted-query-url-parameter-builder/index.html","searchKeys":["PersistedQueryUrlParameterBuilder","class PersistedQueryUrlParameterBuilder(queryContainer: QueryContainer, gson: Gson)","io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder"]},{"name":"class RegexFragmentAnalyzer : FragmentAnalyzer","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzer","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-regex-fragment-analyzer/index.html","searchKeys":["RegexFragmentAnalyzer","class RegexFragmentAnalyzer : FragmentAnalyzer","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzer"]},{"name":"class RegexFragmentAnalyzer : FragmentAnalyzer","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzer","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-regex-fragment-analyzer/index.html","searchKeys":["RegexFragmentAnalyzer","class RegexFragmentAnalyzer : FragmentAnalyzer","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzer"]},{"name":"class RegexFragmentAnalyzerTest(operation: Operation)","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-regex-fragment-analyzer-test/index.html","searchKeys":["RegexFragmentAnalyzerTest","class RegexFragmentAnalyzerTest(operation: Operation)","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest"]},{"name":"class RegexFragmentAnalyzerTest(operation: Operation)","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-regex-fragment-analyzer-test/index.html","searchKeys":["RegexFragmentAnalyzerTest","class RegexFragmentAnalyzerTest(operation: Operation)","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest"]},{"name":"class ResourcesDiscoveryPlugin(self: Class<ResourcesDiscoveryPlugin>) : AbstractDiscoveryPlugin<Class<ResourcesDiscoveryPlugin>> ","description":"io.github.wax911.library.helpers.ResourcesDiscoveryPlugin","location":"library/io.github.wax911.library.helpers/[android-jvm]-resources-discovery-plugin/index.html","searchKeys":["ResourcesDiscoveryPlugin","class ResourcesDiscoveryPlugin(self: Class<ResourcesDiscoveryPlugin>) : AbstractDiscoveryPlugin<Class<ResourcesDiscoveryPlugin>> ","io.github.wax911.library.helpers.ResourcesDiscoveryPlugin"]},{"name":"class ResourcesDiscoveryPlugin(self: Class<ResourcesDiscoveryPlugin>) : AbstractDiscoveryPlugin<Class<ResourcesDiscoveryPlugin>> ","description":"io.github.wax911.library.helpers.ResourcesDiscoveryPlugin","location":"library/io.github.wax911.library.helpers/[common]-resources-discovery-plugin/index.html","searchKeys":["ResourcesDiscoveryPlugin","class ResourcesDiscoveryPlugin(self: Class<ResourcesDiscoveryPlugin>) : AbstractDiscoveryPlugin<Class<ResourcesDiscoveryPlugin>> ","io.github.wax911.library.helpers.ResourcesDiscoveryPlugin"]},{"name":"class TestLogger : AbstractLogger","description":"io.github.wax911.library.helpers.logger.TestLogger","location":"library/io.github.wax911.library.helpers.logger/[android-jvm]-test-logger/index.html","searchKeys":["TestLogger","class TestLogger : AbstractLogger","io.github.wax911.library.helpers.logger.TestLogger"]},{"name":"class TestLogger : AbstractLogger","description":"io.github.wax911.library.helpers.logger.TestLogger","location":"library/io.github.wax911.library.helpers.logger/[common]-test-logger/index.html","searchKeys":["TestLogger","class TestLogger : AbstractLogger","io.github.wax911.library.helpers.logger.TestLogger"]},{"name":"const val APQ_NOT_SUPPORTED_ERROR: String","description":"io.github.wax911.library.persisted.query.error.AutomaticPersistedQueryErrors.APQ_NOT_SUPPORTED_ERROR","location":"library/io.github.wax911.library.persisted.query.error/[android-jvm]-automatic-persisted-query-errors/-a-p-q_-n-o-t_-s-u-p-p-o-r-t-e-d_-e-r-r-o-r.html","searchKeys":["APQ_NOT_SUPPORTED_ERROR","const val APQ_NOT_SUPPORTED_ERROR: String","io.github.wax911.library.persisted.query.error.AutomaticPersistedQueryErrors.APQ_NOT_SUPPORTED_ERROR"]},{"name":"const val APQ_NOT_SUPPORTED_ERROR: String","description":"io.github.wax911.library.persisted.query.error.AutomaticPersistedQueryErrors.APQ_NOT_SUPPORTED_ERROR","location":"library/io.github.wax911.library.persisted.query.error/[common]-automatic-persisted-query-errors/-a-p-q_-n-o-t_-s-u-p-p-o-r-t-e-d_-e-r-r-o-r.html","searchKeys":["APQ_NOT_SUPPORTED_ERROR","const val APQ_NOT_SUPPORTED_ERROR: String","io.github.wax911.library.persisted.query.error.AutomaticPersistedQueryErrors.APQ_NOT_SUPPORTED_ERROR"]},{"name":"const val APQ_NOT_SUPPORTED_ERROR: String","description":"io.github.wax911.library.persistedquery.PersistedQueryErrors.APQ_NOT_SUPPORTED_ERROR","location":"library/io.github.wax911.library.persistedquery/[android-jvm]-persisted-query-errors/-a-p-q_-n-o-t_-s-u-p-p-o-r-t-e-d_-e-r-r-o-r.html","searchKeys":["APQ_NOT_SUPPORTED_ERROR","const val APQ_NOT_SUPPORTED_ERROR: String","io.github.wax911.library.persistedquery.PersistedQueryErrors.APQ_NOT_SUPPORTED_ERROR"]},{"name":"const val APQ_NOT_SUPPORTED_ERROR: String","description":"io.github.wax911.library.persistedquery.PersistedQueryErrors.APQ_NOT_SUPPORTED_ERROR","location":"library/io.github.wax911.library.persistedquery/[common]-persisted-query-errors/-a-p-q_-n-o-t_-s-u-p-p-o-r-t-e-d_-e-r-r-o-r.html","searchKeys":["APQ_NOT_SUPPORTED_ERROR","const val APQ_NOT_SUPPORTED_ERROR: String","io.github.wax911.library.persistedquery.PersistedQueryErrors.APQ_NOT_SUPPORTED_ERROR"]},{"name":"const val APQ_QUERY_NOT_FOUND_ERROR: String","description":"io.github.wax911.library.persisted.query.error.AutomaticPersistedQueryErrors.APQ_QUERY_NOT_FOUND_ERROR","location":"library/io.github.wax911.library.persisted.query.error/[android-jvm]-automatic-persisted-query-errors/-a-p-q_-q-u-e-r-y_-n-o-t_-f-o-u-n-d_-e-r-r-o-r.html","searchKeys":["APQ_QUERY_NOT_FOUND_ERROR","const val APQ_QUERY_NOT_FOUND_ERROR: String","io.github.wax911.library.persisted.query.error.AutomaticPersistedQueryErrors.APQ_QUERY_NOT_FOUND_ERROR"]},{"name":"const val APQ_QUERY_NOT_FOUND_ERROR: String","description":"io.github.wax911.library.persisted.query.error.AutomaticPersistedQueryErrors.APQ_QUERY_NOT_FOUND_ERROR","location":"library/io.github.wax911.library.persisted.query.error/[common]-automatic-persisted-query-errors/-a-p-q_-q-u-e-r-y_-n-o-t_-f-o-u-n-d_-e-r-r-o-r.html","searchKeys":["APQ_QUERY_NOT_FOUND_ERROR","const val APQ_QUERY_NOT_FOUND_ERROR: String","io.github.wax911.library.persisted.query.error.AutomaticPersistedQueryErrors.APQ_QUERY_NOT_FOUND_ERROR"]},{"name":"const val APQ_QUERY_NOT_FOUND_ERROR: String","description":"io.github.wax911.library.persistedquery.PersistedQueryErrors.APQ_QUERY_NOT_FOUND_ERROR","location":"library/io.github.wax911.library.persistedquery/[android-jvm]-persisted-query-errors/-a-p-q_-q-u-e-r-y_-n-o-t_-f-o-u-n-d_-e-r-r-o-r.html","searchKeys":["APQ_QUERY_NOT_FOUND_ERROR","const val APQ_QUERY_NOT_FOUND_ERROR: String","io.github.wax911.library.persistedquery.PersistedQueryErrors.APQ_QUERY_NOT_FOUND_ERROR"]},{"name":"const val APQ_QUERY_NOT_FOUND_ERROR: String","description":"io.github.wax911.library.persistedquery.PersistedQueryErrors.APQ_QUERY_NOT_FOUND_ERROR","location":"library/io.github.wax911.library.persistedquery/[common]-persisted-query-errors/-a-p-q_-q-u-e-r-y_-n-o-t_-f-o-u-n-d_-e-r-r-o-r.html","searchKeys":["APQ_QUERY_NOT_FOUND_ERROR","const val APQ_QUERY_NOT_FOUND_ERROR: String","io.github.wax911.library.persistedquery.PersistedQueryErrors.APQ_QUERY_NOT_FOUND_ERROR"]},{"name":"const val EXTENSION_KEY_APQ: String","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder.Companion.EXTENSION_KEY_APQ","location":"library/io.github.wax911.library.model.request/[android-jvm]-persisted-query-url-parameter-builder/-companion/-e-x-t-e-n-s-i-o-n_-k-e-y_-a-p-q.html","searchKeys":["EXTENSION_KEY_APQ","const val EXTENSION_KEY_APQ: String","io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder.Companion.EXTENSION_KEY_APQ"]},{"name":"const val EXTENSION_KEY_APQ: String","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder.Companion.EXTENSION_KEY_APQ","location":"library/io.github.wax911.library.model.request/[common]-persisted-query-url-parameter-builder/-companion/-e-x-t-e-n-s-i-o-n_-k-e-y_-a-p-q.html","searchKeys":["EXTENSION_KEY_APQ","const val EXTENSION_KEY_APQ: String","io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder.Companion.EXTENSION_KEY_APQ"]},{"name":"const val MimeType: String","description":"io.github.wax911.library.converter.GraphConverter.Companion.MimeType","location":"library/io.github.wax911.library.converter/[android-jvm]-graph-converter/-companion/-mime-type.html","searchKeys":["MimeType","const val MimeType: String","io.github.wax911.library.converter.GraphConverter.Companion.MimeType"]},{"name":"const val MimeType: String","description":"io.github.wax911.library.converter.GraphConverter.Companion.MimeType","location":"library/io.github.wax911.library.converter/[common]-graph-converter/-companion/-mime-type.html","searchKeys":["MimeType","const val MimeType: String","io.github.wax911.library.converter.GraphConverter.Companion.MimeType"]},{"name":"const val persistedQueryExtensionName: String","description":"io.github.wax911.library.model.request.QueryContainerBuilder.Companion.persistedQueryExtensionName","location":"library/io.github.wax911.library.model.request/[android-jvm]-query-container-builder/-companion/persisted-query-extension-name.html","searchKeys":["persistedQueryExtensionName","const val persistedQueryExtensionName: String","io.github.wax911.library.model.request.QueryContainerBuilder.Companion.persistedQueryExtensionName"]},{"name":"const val persistedQueryExtensionName: String","description":"io.github.wax911.library.model.request.QueryContainerBuilder.Companion.persistedQueryExtensionName","location":"library/io.github.wax911.library.model.request/[common]-query-container-builder/-companion/persisted-query-extension-name.html","searchKeys":["persistedQueryExtensionName","const val persistedQueryExtensionName: String","io.github.wax911.library.model.request.QueryContainerBuilder.Companion.persistedQueryExtensionName"]},{"name":"data class FragmentAnalysis(fragmentReference: String, isDefined: Boolean)","description":"io.github.wax911.library.annotation.processor.fragment.FragmentAnalysis","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-fragment-analysis/index.html","searchKeys":["FragmentAnalysis","data class FragmentAnalysis(fragmentReference: String, isDefined: Boolean)","io.github.wax911.library.annotation.processor.fragment.FragmentAnalysis"]},{"name":"data class FragmentAnalysis(fragmentReference: String, isDefined: Boolean)","description":"io.github.wax911.library.annotation.processor.fragment.FragmentAnalysis","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-fragment-analysis/index.html","searchKeys":["FragmentAnalysis","data class FragmentAnalysis(fragmentReference: String, isDefined: Boolean)","io.github.wax911.library.annotation.processor.fragment.FragmentAnalysis"]},{"name":"data class GraphContainer<T>(data: T?, errors: List<GraphError>?, extensions: Map<Any, Any>?)","description":"io.github.wax911.library.model.body.GraphContainer","location":"library/io.github.wax911.library.model.body/[android-jvm]-graph-container/index.html","searchKeys":["GraphContainer","data class GraphContainer<T>(data: T?, errors: List<GraphError>?, extensions: Map<Any, Any>?)","io.github.wax911.library.model.body.GraphContainer"]},{"name":"data class GraphContainer<T>(data: T?, errors: List<GraphError>?, extensions: Map<Any, Any>?)","description":"io.github.wax911.library.model.body.GraphContainer","location":"library/io.github.wax911.library.model.body/[common]-graph-container/index.html","searchKeys":["GraphContainer","data class GraphContainer<T>(data: T?, errors: List<GraphError>?, extensions: Map<Any, Any>?)","io.github.wax911.library.model.body.GraphContainer"]},{"name":"data class GraphError(message: String?, path: List<Any>?, locations: List<GraphError.Location>?, extensions: Map<String, Any?>?)","description":"io.github.wax911.library.model.attribute.GraphError","location":"library/io.github.wax911.library.model.attribute/[android-jvm]-graph-error/index.html","searchKeys":["GraphError","data class GraphError(message: String?, path: List<Any>?, locations: List<GraphError.Location>?, extensions: Map<String, Any?>?)","io.github.wax911.library.model.attribute.GraphError"]},{"name":"data class GraphError(message: String?, path: List<Any>?, locations: List<GraphError.Location>?, extensions: Map<String, Any?>?)","description":"io.github.wax911.library.model.attribute.GraphError","location":"library/io.github.wax911.library.model.attribute/[common]-graph-error/index.html","searchKeys":["GraphError","data class GraphError(message: String?, path: List<Any>?, locations: List<GraphError.Location>?, extensions: Map<String, Any?>?)","io.github.wax911.library.model.attribute.GraphError"]},{"name":"data class Location(line: Int, column: Int)","description":"io.github.wax911.library.model.attribute.GraphError.Location","location":"library/io.github.wax911.library.model.attribute/[android-jvm]-graph-error/-location/index.html","searchKeys":["Location","data class Location(line: Int, column: Int)","io.github.wax911.library.model.attribute.GraphError.Location"]},{"name":"data class Location(line: Int, column: Int)","description":"io.github.wax911.library.model.attribute.GraphError.Location","location":"library/io.github.wax911.library.model.attribute/[common]-graph-error/-location/index.html","searchKeys":["Location","data class Location(line: Int, column: Int)","io.github.wax911.library.model.attribute.GraphError.Location"]},{"name":"data class Operation(typeStr: String, nameStr: String)","description":"io.github.wax911.library.annotation.processor.fragment.Operation","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-operation/index.html","searchKeys":["Operation","data class Operation(typeStr: String, nameStr: String)","io.github.wax911.library.annotation.processor.fragment.Operation"]},{"name":"data class Operation(typeStr: String, nameStr: String)","description":"io.github.wax911.library.annotation.processor.fragment.Operation","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-operation/index.html","searchKeys":["Operation","data class Operation(typeStr: String, nameStr: String)","io.github.wax911.library.annotation.processor.fragment.Operation"]},{"name":"data class PersistedQuery(sha256Hash: String, version: Int)","description":"io.github.wax911.library.model.request.PersistedQuery","location":"library/io.github.wax911.library.model.request/[android-jvm]-persisted-query/index.html","searchKeys":["PersistedQuery","data class PersistedQuery(sha256Hash: String, version: Int)","io.github.wax911.library.model.request.PersistedQuery"]},{"name":"data class PersistedQuery(sha256Hash: String, version: Int)","description":"io.github.wax911.library.model.request.PersistedQuery","location":"library/io.github.wax911.library.model.request/[common]-persisted-query/index.html","searchKeys":["PersistedQuery","data class PersistedQuery(sha256Hash: String, version: Int)","io.github.wax911.library.model.request.PersistedQuery"]},{"name":"data class PersistedQueryUrlParameters(extensions: String, operationName: String, variables: String)","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameters","location":"library/io.github.wax911.library.model.request/[android-jvm]-persisted-query-url-parameters/index.html","searchKeys":["PersistedQueryUrlParameters","data class PersistedQueryUrlParameters(extensions: String, operationName: String, variables: String)","io.github.wax911.library.model.request.PersistedQueryUrlParameters"]},{"name":"data class PersistedQueryUrlParameters(extensions: String, operationName: String, variables: String)","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameters","location":"library/io.github.wax911.library.model.request/[common]-persisted-query-url-parameters/index.html","searchKeys":["PersistedQueryUrlParameters","data class PersistedQueryUrlParameters(extensions: String, operationName: String, variables: String)","io.github.wax911.library.model.request.PersistedQueryUrlParameters"]},{"name":"data class QueryContainer","description":"io.github.wax911.library.model.request.QueryContainer","location":"library/io.github.wax911.library.model.request/[common]-query-container/index.html","searchKeys":["QueryContainer","data class QueryContainer","io.github.wax911.library.model.request.QueryContainer"]},{"name":"data class QueryContainer : Parcelable","description":"io.github.wax911.library.model.request.QueryContainer","location":"library/io.github.wax911.library.model.request/[android-jvm]-query-container/index.html","searchKeys":["QueryContainer","data class QueryContainer : Parcelable","io.github.wax911.library.model.request.QueryContainer"]},{"name":"enum Level : Enum<ILogger.Level> ","description":"io.github.wax911.library.logger.contract.ILogger.Level","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/index.html","searchKeys":["Level","enum Level : Enum<ILogger.Level> ","io.github.wax911.library.logger.contract.ILogger.Level"]},{"name":"enum Level : Enum<ILogger.Level> ","description":"io.github.wax911.library.logger.contract.ILogger.Level","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/index.html","searchKeys":["Level","enum Level : Enum<ILogger.Level> ","io.github.wax911.library.logger.contract.ILogger.Level"]},{"name":"fun <ERROR CLASS><out <ERROR CLASS>>?.getError(): List<GraphError>?","description":"io.github.wax911.library.util.getError","location":"library/io.github.wax911.library.util/get-error.html","searchKeys":["getError","fun <ERROR CLASS><out <ERROR CLASS>>?.getError(): List<GraphError>?","io.github.wax911.library.util.getError"]},{"name":"fun <S : Any> AbstractDiscoveryPlugin(source: S)","description":"io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPlugin.AbstractDiscoveryPlugin","location":"library/io.github.wax911.library.annotation.processor.plugin.contract/[android-jvm]-abstract-discovery-plugin/-abstract-discovery-plugin.html","searchKeys":["AbstractDiscoveryPlugin","fun <S : Any> AbstractDiscoveryPlugin(source: S)","io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPlugin.AbstractDiscoveryPlugin"]},{"name":"fun <S : Any> AbstractDiscoveryPlugin(source: S)","description":"io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPlugin.AbstractDiscoveryPlugin","location":"library/io.github.wax911.library.annotation.processor.plugin.contract/[common]-abstract-discovery-plugin/-abstract-discovery-plugin.html","searchKeys":["AbstractDiscoveryPlugin","fun <S : Any> AbstractDiscoveryPlugin(source: S)","io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPlugin.AbstractDiscoveryPlugin"]},{"name":"fun <T> GraphContainer(data: T? = null, errors: List<GraphError>? = null, extensions: Map<Any, Any>? = null)","description":"io.github.wax911.library.model.body.GraphContainer.GraphContainer","location":"library/io.github.wax911.library.model.body/[android-jvm]-graph-container/-graph-container.html","searchKeys":["GraphContainer","fun <T> GraphContainer(data: T? = null, errors: List<GraphError>? = null, extensions: Map<Any, Any>? = null)","io.github.wax911.library.model.body.GraphContainer.GraphContainer"]},{"name":"fun <T> GraphContainer(data: T? = null, errors: List<GraphError>? = null, extensions: Map<Any, Any>? = null)","description":"io.github.wax911.library.model.body.GraphContainer.GraphContainer","location":"library/io.github.wax911.library.model.body/[common]-graph-container/-graph-container.html","searchKeys":["GraphContainer","fun <T> GraphContainer(data: T? = null, errors: List<GraphError>? = null, extensions: Map<Any, Any>? = null)","io.github.wax911.library.model.body.GraphContainer.GraphContainer"]},{"name":"fun AbstractDiscoveryPluginTest()","description":"io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.AbstractDiscoveryPluginTest","location":"library/io.github.wax911.library.annotation.processor.plugin.contract/[android-jvm]-abstract-discovery-plugin-test/-abstract-discovery-plugin-test.html","searchKeys":["AbstractDiscoveryPluginTest","fun AbstractDiscoveryPluginTest()","io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.AbstractDiscoveryPluginTest"]},{"name":"fun AbstractDiscoveryPluginTest()","description":"io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.AbstractDiscoveryPluginTest","location":"library/io.github.wax911.library.annotation.processor.plugin.contract/[common]-abstract-discovery-plugin-test/-abstract-discovery-plugin-test.html","searchKeys":["AbstractDiscoveryPluginTest","fun AbstractDiscoveryPluginTest()","io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.AbstractDiscoveryPluginTest"]},{"name":"fun AbstractGraphProcessor()","description":"io.github.wax911.library.annotation.processor.contract.AbstractGraphProcessor.AbstractGraphProcessor","location":"library/io.github.wax911.library.annotation.processor.contract/[android-jvm]-abstract-graph-processor/-abstract-graph-processor.html","searchKeys":["AbstractGraphProcessor","fun AbstractGraphProcessor()","io.github.wax911.library.annotation.processor.contract.AbstractGraphProcessor.AbstractGraphProcessor"]},{"name":"fun AbstractGraphProcessor()","description":"io.github.wax911.library.annotation.processor.contract.AbstractGraphProcessor.AbstractGraphProcessor","location":"library/io.github.wax911.library.annotation.processor.contract/[common]-abstract-graph-processor/-abstract-graph-processor.html","searchKeys":["AbstractGraphProcessor","fun AbstractGraphProcessor()","io.github.wax911.library.annotation.processor.contract.AbstractGraphProcessor.AbstractGraphProcessor"]},{"name":"fun AbstractLogger(level: ILogger.Level)","description":"io.github.wax911.library.logger.core.AbstractLogger.AbstractLogger","location":"library/io.github.wax911.library.logger.core/[android-jvm]-abstract-logger/-abstract-logger.html","searchKeys":["AbstractLogger","fun AbstractLogger(level: ILogger.Level)","io.github.wax911.library.logger.core.AbstractLogger.AbstractLogger"]},{"name":"fun AbstractLogger(level: ILogger.Level)","description":"io.github.wax911.library.logger.core.AbstractLogger.AbstractLogger","location":"library/io.github.wax911.library.logger.core/[common]-abstract-logger/-abstract-logger.html","searchKeys":["AbstractLogger","fun AbstractLogger(level: ILogger.Level)","io.github.wax911.library.logger.core.AbstractLogger.AbstractLogger"]},{"name":"fun AbstractLoggerTest()","description":"io.github.wax911.library.logger.core.AbstractLoggerTest.AbstractLoggerTest","location":"library/io.github.wax911.library.logger.core/[android-jvm]-abstract-logger-test/-abstract-logger-test.html","searchKeys":["AbstractLoggerTest","fun AbstractLoggerTest()","io.github.wax911.library.logger.core.AbstractLoggerTest.AbstractLoggerTest"]},{"name":"fun AbstractLoggerTest()","description":"io.github.wax911.library.logger.core.AbstractLoggerTest.AbstractLoggerTest","location":"library/io.github.wax911.library.logger.core/[common]-abstract-logger-test/-abstract-logger-test.html","searchKeys":["AbstractLoggerTest","fun AbstractLoggerTest()","io.github.wax911.library.logger.core.AbstractLoggerTest.AbstractLoggerTest"]},{"name":"fun AssetManagerDiscoveryPlugin(assetManager: <ERROR CLASS>, targetPath: String = \"graphql\", targetExtension: String = \".graphql\")","description":"io.github.wax911.library.annotation.processor.plugin.AssetManagerDiscoveryPlugin.AssetManagerDiscoveryPlugin","location":"library/io.github.wax911.library.annotation.processor.plugin/[common]-asset-manager-discovery-plugin/-asset-manager-discovery-plugin.html","searchKeys":["AssetManagerDiscoveryPlugin","fun AssetManagerDiscoveryPlugin(assetManager: <ERROR CLASS>, targetPath: String = \"graphql\", targetExtension: String = \".graphql\")","io.github.wax911.library.annotation.processor.plugin.AssetManagerDiscoveryPlugin.AssetManagerDiscoveryPlugin"]},{"name":"fun AssetManagerDiscoveryPlugin(assetManager: AssetManager, targetPath: String = \"graphql\", targetExtension: String = \".graphql\")","description":"io.github.wax911.library.annotation.processor.plugin.AssetManagerDiscoveryPlugin.AssetManagerDiscoveryPlugin","location":"library/io.github.wax911.library.annotation.processor.plugin/[android-jvm]-asset-manager-discovery-plugin/-asset-manager-discovery-plugin.html","searchKeys":["AssetManagerDiscoveryPlugin","fun AssetManagerDiscoveryPlugin(assetManager: AssetManager, targetPath: String = \"graphql\", targetExtension: String = \".graphql\")","io.github.wax911.library.annotation.processor.plugin.AssetManagerDiscoveryPlugin.AssetManagerDiscoveryPlugin"]},{"name":"fun AutomaticPersistedQueryCalculator(processor: AbstractGraphProcessor)","description":"io.github.wax911.library.persisted.query.AutomaticPersistedQueryCalculator.AutomaticPersistedQueryCalculator","location":"library/io.github.wax911.library.persisted.query/[android-jvm]-automatic-persisted-query-calculator/-automatic-persisted-query-calculator.html","searchKeys":["AutomaticPersistedQueryCalculator","fun AutomaticPersistedQueryCalculator(processor: AbstractGraphProcessor)","io.github.wax911.library.persisted.query.AutomaticPersistedQueryCalculator.AutomaticPersistedQueryCalculator"]},{"name":"fun AutomaticPersistedQueryCalculator(processor: AbstractGraphProcessor)","description":"io.github.wax911.library.persisted.query.AutomaticPersistedQueryCalculator.AutomaticPersistedQueryCalculator","location":"library/io.github.wax911.library.persisted.query/[common]-automatic-persisted-query-calculator/-automatic-persisted-query-calculator.html","searchKeys":["AutomaticPersistedQueryCalculator","fun AutomaticPersistedQueryCalculator(processor: AbstractGraphProcessor)","io.github.wax911.library.persisted.query.AutomaticPersistedQueryCalculator.AutomaticPersistedQueryCalculator"]},{"name":"fun DefaultGraphLogger(level: ILogger.Level = Level.INFO)","description":"io.github.wax911.library.logger.DefaultGraphLogger.DefaultGraphLogger","location":"library/io.github.wax911.library.logger/[android-jvm]-default-graph-logger/-default-graph-logger.html","searchKeys":["DefaultGraphLogger","fun DefaultGraphLogger(level: ILogger.Level = Level.INFO)","io.github.wax911.library.logger.DefaultGraphLogger.DefaultGraphLogger"]},{"name":"fun DefaultGraphLogger(level: ILogger.Level = Level.INFO)","description":"io.github.wax911.library.logger.DefaultGraphLogger.DefaultGraphLogger","location":"library/io.github.wax911.library.logger/[common]-default-graph-logger/-default-graph-logger.html","searchKeys":["DefaultGraphLogger","fun DefaultGraphLogger(level: ILogger.Level = Level.INFO)","io.github.wax911.library.logger.DefaultGraphLogger.DefaultGraphLogger"]},{"name":"fun FragmentAnalysis(fragmentReference: String, isDefined: Boolean)","description":"io.github.wax911.library.annotation.processor.fragment.FragmentAnalysis.FragmentAnalysis","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-fragment-analysis/-fragment-analysis.html","searchKeys":["FragmentAnalysis","fun FragmentAnalysis(fragmentReference: String, isDefined: Boolean)","io.github.wax911.library.annotation.processor.fragment.FragmentAnalysis.FragmentAnalysis"]},{"name":"fun FragmentAnalysis(fragmentReference: String, isDefined: Boolean)","description":"io.github.wax911.library.annotation.processor.fragment.FragmentAnalysis.FragmentAnalysis","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-fragment-analysis/-fragment-analysis.html","searchKeys":["FragmentAnalysis","fun FragmentAnalysis(fragmentReference: String, isDefined: Boolean)","io.github.wax911.library.annotation.processor.fragment.FragmentAnalysis.FragmentAnalysis"]},{"name":"fun FragmentPatcher(defaultExtension: String, fragmentAnalyzer: FragmentAnalyzer = RegexFragmentAnalyzer(), logger: AbstractLogger)","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcher.FragmentPatcher","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-fragment-patcher/-fragment-patcher.html","searchKeys":["FragmentPatcher","fun FragmentPatcher(defaultExtension: String, fragmentAnalyzer: FragmentAnalyzer = RegexFragmentAnalyzer(), logger: AbstractLogger)","io.github.wax911.library.annotation.processor.fragment.FragmentPatcher.FragmentPatcher"]},{"name":"fun FragmentPatcher(defaultExtension: String, fragmentAnalyzer: FragmentAnalyzer = RegexFragmentAnalyzer(), logger: AbstractLogger)","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcher.FragmentPatcher","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-fragment-patcher/-fragment-patcher.html","searchKeys":["FragmentPatcher","fun FragmentPatcher(defaultExtension: String, fragmentAnalyzer: FragmentAnalyzer = RegexFragmentAnalyzer(), logger: AbstractLogger)","io.github.wax911.library.annotation.processor.fragment.FragmentPatcher.FragmentPatcher"]},{"name":"fun FragmentPatcherTest()","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.FragmentPatcherTest","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-fragment-patcher-test/-fragment-patcher-test.html","searchKeys":["FragmentPatcherTest","fun FragmentPatcherTest()","io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.FragmentPatcherTest"]},{"name":"fun FragmentPatcherTest()","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.FragmentPatcherTest","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-fragment-patcher-test/-fragment-patcher-test.html","searchKeys":["FragmentPatcherTest","fun FragmentPatcherTest()","io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.FragmentPatcherTest"]},{"name":"fun Given a fragment missing and not in map, When include missing fragments, Then return nothing()","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given a fragment missing and not in map, When include missing fragments, Then return nothing","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-fragment-patcher-test/-given a fragment missing and not in map, -when include missing fragments, -then return nothing.html","searchKeys":["Given a fragment missing and not in map, When include missing fragments, Then return nothing","fun Given a fragment missing and not in map, When include missing fragments, Then return nothing()","io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given a fragment missing and not in map, When include missing fragments, Then return nothing"]},{"name":"fun Given a fragment missing and not in map, When include missing fragments, Then return nothing()","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given a fragment missing and not in map, When include missing fragments, Then return nothing","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-fragment-patcher-test/-given a fragment missing and not in map, -when include missing fragments, -then return nothing.html","searchKeys":["Given a fragment missing and not in map, When include missing fragments, Then return nothing","fun Given a fragment missing and not in map, When include missing fragments, Then return nothing()","io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given a fragment missing and not in map, When include missing fragments, Then return nothing"]},{"name":"fun Given a fragment referenced multiple times, When include missing fragments, Then do not duplicate in patch()","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given a fragment referenced multiple times, When include missing fragments, Then do not duplicate in patch","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-fragment-patcher-test/-given a fragment referenced multiple times, -when include missing fragments, -then do not duplicate in patch.html","searchKeys":["Given a fragment referenced multiple times, When include missing fragments, Then do not duplicate in patch","fun Given a fragment referenced multiple times, When include missing fragments, Then do not duplicate in patch()","io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given a fragment referenced multiple times, When include missing fragments, Then do not duplicate in patch"]},{"name":"fun Given a fragment referenced multiple times, When include missing fragments, Then do not duplicate in patch()","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given a fragment referenced multiple times, When include missing fragments, Then do not duplicate in patch","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-fragment-patcher-test/-given a fragment referenced multiple times, -when include missing fragments, -then do not duplicate in patch.html","searchKeys":["Given a fragment referenced multiple times, When include missing fragments, Then do not duplicate in patch","fun Given a fragment referenced multiple times, When include missing fragments, Then do not duplicate in patch()","io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given a fragment referenced multiple times, When include missing fragments, Then do not duplicate in patch"]},{"name":"fun Given a missing fragment definition, When include missing fragments, Then return missing contents()","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given a missing fragment definition, When include missing fragments, Then return missing contents","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-fragment-patcher-test/-given a missing fragment definition, -when include missing fragments, -then return missing contents.html","searchKeys":["Given a missing fragment definition, When include missing fragments, Then return missing contents","fun Given a missing fragment definition, When include missing fragments, Then return missing contents()","io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given a missing fragment definition, When include missing fragments, Then return missing contents"]},{"name":"fun Given a missing fragment definition, When include missing fragments, Then return missing contents()","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given a missing fragment definition, When include missing fragments, Then return missing contents","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-fragment-patcher-test/-given a missing fragment definition, -when include missing fragments, -then return missing contents.html","searchKeys":["Given a missing fragment definition, When include missing fragments, Then return missing contents","fun Given a missing fragment definition, When include missing fragments, Then return missing contents()","io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given a missing fragment definition, When include missing fragments, Then return missing contents"]},{"name":"fun Given a valid operation, When contains a query type, Then return true()","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given a valid operation, When contains a query type, Then return true","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-graph-regex-util-test/-given a valid operation, -when contains a query type, -then return true.html","searchKeys":["Given a valid operation, When contains a query type, Then return true","fun Given a valid operation, When contains a query type, Then return true()","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given a valid operation, When contains a query type, Then return true"]},{"name":"fun Given a valid operation, When contains a query type, Then return true()","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given a valid operation, When contains a query type, Then return true","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-graph-regex-util-test/-given a valid operation, -when contains a query type, -then return true.html","searchKeys":["Given a valid operation, When contains a query type, Then return true","fun Given a valid operation, When contains a query type, Then return true()","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given a valid operation, When contains a query type, Then return true"]},{"name":"fun Given all invalid formatting in operation, When find fragment definitions, Then find nothing()","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given all invalid formatting in operation, When find fragment definitions, Then find nothing","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-graph-regex-util-test/-given all invalid formatting in operation, -when find fragment definitions, -then find nothing.html","searchKeys":["Given all invalid formatting in operation, When find fragment definitions, Then find nothing","fun Given all invalid formatting in operation, When find fragment definitions, Then find nothing()","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given all invalid formatting in operation, When find fragment definitions, Then find nothing"]},{"name":"fun Given all invalid formatting in operation, When find fragment definitions, Then find nothing()","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given all invalid formatting in operation, When find fragment definitions, Then find nothing","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-graph-regex-util-test/-given all invalid formatting in operation, -when find fragment definitions, -then find nothing.html","searchKeys":["Given all invalid formatting in operation, When find fragment definitions, Then find nothing","fun Given all invalid formatting in operation, When find fragment definitions, Then find nothing()","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given all invalid formatting in operation, When find fragment definitions, Then find nothing"]},{"name":"fun Given all invalid formatting in operation, When find fragment references, Then find nothing()","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given all invalid formatting in operation, When find fragment references, Then find nothing","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-graph-regex-util-test/-given all invalid formatting in operation, -when find fragment references, -then find nothing.html","searchKeys":["Given all invalid formatting in operation, When find fragment references, Then find nothing","fun Given all invalid formatting in operation, When find fragment references, Then find nothing()","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given all invalid formatting in operation, When find fragment references, Then find nothing"]},{"name":"fun Given all invalid formatting in operation, When find fragment references, Then find nothing()","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given all invalid formatting in operation, When find fragment references, Then find nothing","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-graph-regex-util-test/-given all invalid formatting in operation, -when find fragment references, -then find nothing.html","searchKeys":["Given all invalid formatting in operation, When find fragment references, Then find nothing","fun Given all invalid formatting in operation, When find fragment references, Then find nothing()","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given all invalid formatting in operation, When find fragment references, Then find nothing"]},{"name":"fun Given all valid formatting in operation, When find fragment definitions, Then find all()","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given all valid formatting in operation, When find fragment definitions, Then find all","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-graph-regex-util-test/-given all valid formatting in operation, -when find fragment definitions, -then find all.html","searchKeys":["Given all valid formatting in operation, When find fragment definitions, Then find all","fun Given all valid formatting in operation, When find fragment definitions, Then find all()","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given all valid formatting in operation, When find fragment definitions, Then find all"]},{"name":"fun Given all valid formatting in operation, When find fragment definitions, Then find all()","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given all valid formatting in operation, When find fragment definitions, Then find all","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-graph-regex-util-test/-given all valid formatting in operation, -when find fragment definitions, -then find all.html","searchKeys":["Given all valid formatting in operation, When find fragment definitions, Then find all","fun Given all valid formatting in operation, When find fragment definitions, Then find all()","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given all valid formatting in operation, When find fragment definitions, Then find all"]},{"name":"fun Given all valid formatting in operation, When find fragment references, Then find all()","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given all valid formatting in operation, When find fragment references, Then find all","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-graph-regex-util-test/-given all valid formatting in operation, -when find fragment references, -then find all.html","searchKeys":["Given all valid formatting in operation, When find fragment references, Then find all","fun Given all valid formatting in operation, When find fragment references, Then find all()","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given all valid formatting in operation, When find fragment references, Then find all"]},{"name":"fun Given all valid formatting in operation, When find fragment references, Then find all()","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given all valid formatting in operation, When find fragment references, Then find all","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-graph-regex-util-test/-given all valid formatting in operation, -when find fragment references, -then find all.html","searchKeys":["Given all valid formatting in operation, When find fragment references, Then find all","fun Given all valid formatting in operation, When find fragment references, Then find all()","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given all valid formatting in operation, When find fragment references, Then find all"]},{"name":"fun Given an operation with 1 of 3 fragments defined, When analyze fragments, Then analysis matches expectation()","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Given an operation with 1 of 3 fragments defined, When analyze fragments, Then analysis matches expectation","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-regex-fragment-analyzer-test/-given an operation with 1 of 3 fragments defined, -when analyze fragments, -then analysis matches expectation.html","searchKeys":["Given an operation with 1 of 3 fragments defined, When analyze fragments, Then analysis matches expectation","fun Given an operation with 1 of 3 fragments defined, When analyze fragments, Then analysis matches expectation()","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Given an operation with 1 of 3 fragments defined, When analyze fragments, Then analysis matches expectation"]},{"name":"fun Given an operation with 1 of 3 fragments defined, When analyze fragments, Then analysis matches expectation()","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Given an operation with 1 of 3 fragments defined, When analyze fragments, Then analysis matches expectation","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-regex-fragment-analyzer-test/-given an operation with 1 of 3 fragments defined, -when analyze fragments, -then analysis matches expectation.html","searchKeys":["Given an operation with 1 of 3 fragments defined, When analyze fragments, Then analysis matches expectation","fun Given an operation with 1 of 3 fragments defined, When analyze fragments, Then analysis matches expectation()","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Given an operation with 1 of 3 fragments defined, When analyze fragments, Then analysis matches expectation"]},{"name":"fun Given an operation with all fragments defined, When analyze fragments, Then analysis matches expectation()","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Given an operation with all fragments defined, When analyze fragments, Then analysis matches expectation","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-regex-fragment-analyzer-test/-given an operation with all fragments defined, -when analyze fragments, -then analysis matches expectation.html","searchKeys":["Given an operation with all fragments defined, When analyze fragments, Then analysis matches expectation","fun Given an operation with all fragments defined, When analyze fragments, Then analysis matches expectation()","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Given an operation with all fragments defined, When analyze fragments, Then analysis matches expectation"]},{"name":"fun Given an operation with all fragments defined, When analyze fragments, Then analysis matches expectation()","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Given an operation with all fragments defined, When analyze fragments, Then analysis matches expectation","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-regex-fragment-analyzer-test/-given an operation with all fragments defined, -when analyze fragments, -then analysis matches expectation.html","searchKeys":["Given an operation with all fragments defined, When analyze fragments, Then analysis matches expectation","fun Given an operation with all fragments defined, When analyze fragments, Then analysis matches expectation()","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Given an operation with all fragments defined, When analyze fragments, Then analysis matches expectation"]},{"name":"fun Given an operation with fragments within fragments, When analyze fragments, Then analysis matches expectation()","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Given an operation with fragments within fragments, When analyze fragments, Then analysis matches expectation","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-regex-fragment-analyzer-test/-given an operation with fragments within fragments, -when analyze fragments, -then analysis matches expectation.html","searchKeys":["Given an operation with fragments within fragments, When analyze fragments, Then analysis matches expectation","fun Given an operation with fragments within fragments, When analyze fragments, Then analysis matches expectation()","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Given an operation with fragments within fragments, When analyze fragments, Then analysis matches expectation"]},{"name":"fun Given an operation with fragments within fragments, When analyze fragments, Then analysis matches expectation()","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Given an operation with fragments within fragments, When analyze fragments, Then analysis matches expectation","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-regex-fragment-analyzer-test/-given an operation with fragments within fragments, -when analyze fragments, -then analysis matches expectation.html","searchKeys":["Given an operation with fragments within fragments, When analyze fragments, Then analysis matches expectation","fun Given an operation with fragments within fragments, When analyze fragments, Then analysis matches expectation()","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Given an operation with fragments within fragments, When analyze fragments, Then analysis matches expectation"]},{"name":"fun Given an operation with no fragments defined, When analyze fragments, Then analysis matches expectation()","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Given an operation with no fragments defined, When analyze fragments, Then analysis matches expectation","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-regex-fragment-analyzer-test/-given an operation with no fragments defined, -when analyze fragments, -then analysis matches expectation.html","searchKeys":["Given an operation with no fragments defined, When analyze fragments, Then analysis matches expectation","fun Given an operation with no fragments defined, When analyze fragments, Then analysis matches expectation()","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Given an operation with no fragments defined, When analyze fragments, Then analysis matches expectation"]},{"name":"fun Given an operation with no fragments defined, When analyze fragments, Then analysis matches expectation()","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Given an operation with no fragments defined, When analyze fragments, Then analysis matches expectation","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-regex-fragment-analyzer-test/-given an operation with no fragments defined, -when analyze fragments, -then analysis matches expectation.html","searchKeys":["Given an operation with no fragments defined, When analyze fragments, Then analysis matches expectation","fun Given an operation with no fragments defined, When analyze fragments, Then analysis matches expectation()","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Given an operation with no fragments defined, When analyze fragments, Then analysis matches expectation"]},{"name":"fun Given missing fragments and recursive references, When include missing fragments, Then return all missing contents()","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given missing fragments and recursive references, When include missing fragments, Then return all missing contents","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-fragment-patcher-test/-given missing fragments and recursive references, -when include missing fragments, -then return all missing contents.html","searchKeys":["Given missing fragments and recursive references, When include missing fragments, Then return all missing contents","fun Given missing fragments and recursive references, When include missing fragments, Then return all missing contents()","io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given missing fragments and recursive references, When include missing fragments, Then return all missing contents"]},{"name":"fun Given missing fragments and recursive references, When include missing fragments, Then return all missing contents()","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given missing fragments and recursive references, When include missing fragments, Then return all missing contents","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-fragment-patcher-test/-given missing fragments and recursive references, -when include missing fragments, -then return all missing contents.html","searchKeys":["Given missing fragments and recursive references, When include missing fragments, Then return all missing contents","fun Given missing fragments and recursive references, When include missing fragments, Then return all missing contents()","io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given missing fragments and recursive references, When include missing fragments, Then return all missing contents"]},{"name":"fun Given mixed good and bad formatting in operation, When find fragment definitions, Then find only the good()","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given mixed good and bad formatting in operation, When find fragment definitions, Then find only the good","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-graph-regex-util-test/-given mixed good and bad formatting in operation, -when find fragment definitions, -then find only the good.html","searchKeys":["Given mixed good and bad formatting in operation, When find fragment definitions, Then find only the good","fun Given mixed good and bad formatting in operation, When find fragment definitions, Then find only the good()","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given mixed good and bad formatting in operation, When find fragment definitions, Then find only the good"]},{"name":"fun Given mixed good and bad formatting in operation, When find fragment definitions, Then find only the good()","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given mixed good and bad formatting in operation, When find fragment definitions, Then find only the good","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-graph-regex-util-test/-given mixed good and bad formatting in operation, -when find fragment definitions, -then find only the good.html","searchKeys":["Given mixed good and bad formatting in operation, When find fragment definitions, Then find only the good","fun Given mixed good and bad formatting in operation, When find fragment definitions, Then find only the good()","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given mixed good and bad formatting in operation, When find fragment definitions, Then find only the good"]},{"name":"fun Given mixed good and bad formatting in operation, When find fragment references, Then find only the good()","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given mixed good and bad formatting in operation, When find fragment references, Then find only the good","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-graph-regex-util-test/-given mixed good and bad formatting in operation, -when find fragment references, -then find only the good.html","searchKeys":["Given mixed good and bad formatting in operation, When find fragment references, Then find only the good","fun Given mixed good and bad formatting in operation, When find fragment references, Then find only the good()","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given mixed good and bad formatting in operation, When find fragment references, Then find only the good"]},{"name":"fun Given mixed good and bad formatting in operation, When find fragment references, Then find only the good()","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given mixed good and bad formatting in operation, When find fragment references, Then find only the good","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-graph-regex-util-test/-given mixed good and bad formatting in operation, -when find fragment references, -then find only the good.html","searchKeys":["Given mixed good and bad formatting in operation, When find fragment references, Then find only the good","fun Given mixed good and bad formatting in operation, When find fragment references, Then find only the good()","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given mixed good and bad formatting in operation, When find fragment references, Then find only the good"]},{"name":"fun Given multiple missing fragment definitions, When include missing fragments, Then return all missing contents()","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given multiple missing fragment definitions, When include missing fragments, Then return all missing contents","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-fragment-patcher-test/-given multiple missing fragment definitions, -when include missing fragments, -then return all missing contents.html","searchKeys":["Given multiple missing fragment definitions, When include missing fragments, Then return all missing contents","fun Given multiple missing fragment definitions, When include missing fragments, Then return all missing contents()","io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given multiple missing fragment definitions, When include missing fragments, Then return all missing contents"]},{"name":"fun Given multiple missing fragment definitions, When include missing fragments, Then return all missing contents()","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given multiple missing fragment definitions, When include missing fragments, Then return all missing contents","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-fragment-patcher-test/-given multiple missing fragment definitions, -when include missing fragments, -then return all missing contents.html","searchKeys":["Given multiple missing fragment definitions, When include missing fragments, Then return all missing contents","fun Given multiple missing fragment definitions, When include missing fragments, Then return all missing contents()","io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given multiple missing fragment definitions, When include missing fragments, Then return all missing contents"]},{"name":"fun Given no missing fragment definitions, When include missing fragments, Then return empty string()","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given no missing fragment definitions, When include missing fragments, Then return empty string","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-fragment-patcher-test/-given no missing fragment definitions, -when include missing fragments, -then return empty string.html","searchKeys":["Given no missing fragment definitions, When include missing fragments, Then return empty string","fun Given no missing fragment definitions, When include missing fragments, Then return empty string()","io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given no missing fragment definitions, When include missing fragments, Then return empty string"]},{"name":"fun Given no missing fragment definitions, When include missing fragments, Then return empty string()","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given no missing fragment definitions, When include missing fragments, Then return empty string","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-fragment-patcher-test/-given no missing fragment definitions, -when include missing fragments, -then return empty string.html","searchKeys":["Given no missing fragment definitions, When include missing fragments, Then return empty string","fun Given no missing fragment definitions, When include missing fragments, Then return empty string()","io.github.wax911.library.annotation.processor.fragment.FragmentPatcherTest.Given no missing fragment definitions, When include missing fragments, Then return empty string"]},{"name":"fun Given not a valid operation, When contains a query type, Then return false()","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given not a valid operation, When contains a query type, Then return false","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-graph-regex-util-test/-given not a valid operation, -when contains a query type, -then return false.html","searchKeys":["Given not a valid operation, When contains a query type, Then return false","fun Given not a valid operation, When contains a query type, Then return false()","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given not a valid operation, When contains a query type, Then return false"]},{"name":"fun Given not a valid operation, When contains a query type, Then return false()","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given not a valid operation, When contains a query type, Then return false","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-graph-regex-util-test/-given not a valid operation, -when contains a query type, -then return false.html","searchKeys":["Given not a valid operation, When contains a query type, Then return false","fun Given not a valid operation, When contains a query type, Then return false()","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Given not a valid operation, When contains a query type, Then return false"]},{"name":"fun GraphConverter(graphProcessor: AbstractGraphProcessor, gson: <ERROR CLASS>)","description":"io.github.wax911.library.converter.GraphConverter.GraphConverter","location":"library/io.github.wax911.library.converter/[common]-graph-converter/-graph-converter.html","searchKeys":["GraphConverter","fun GraphConverter(graphProcessor: AbstractGraphProcessor, gson: <ERROR CLASS>)","io.github.wax911.library.converter.GraphConverter.GraphConverter"]},{"name":"fun GraphConverter(graphProcessor: AbstractGraphProcessor, gson: Gson)","description":"io.github.wax911.library.converter.GraphConverter.GraphConverter","location":"library/io.github.wax911.library.converter/[android-jvm]-graph-converter/-graph-converter.html","searchKeys":["GraphConverter","fun GraphConverter(graphProcessor: AbstractGraphProcessor, gson: Gson)","io.github.wax911.library.converter.GraphConverter.GraphConverter"]},{"name":"fun GraphError(message: String?, path: List<Any>? = null, locations: List<GraphError.Location>? = null, extensions: Map<String, Any?>? = null)","description":"io.github.wax911.library.model.attribute.GraphError.GraphError","location":"library/io.github.wax911.library.model.attribute/[android-jvm]-graph-error/-graph-error.html","searchKeys":["GraphError","fun GraphError(message: String?, path: List<Any>? = null, locations: List<GraphError.Location>? = null, extensions: Map<String, Any?>? = null)","io.github.wax911.library.model.attribute.GraphError.GraphError"]},{"name":"fun GraphError(message: String?, path: List<Any>? = null, locations: List<GraphError.Location>? = null, extensions: Map<String, Any?>? = null)","description":"io.github.wax911.library.model.attribute.GraphError.GraphError","location":"library/io.github.wax911.library.model.attribute/[common]-graph-error/-graph-error.html","searchKeys":["GraphError","fun GraphError(message: String?, path: List<Any>? = null, locations: List<GraphError.Location>? = null, extensions: Map<String, Any?>? = null)","io.github.wax911.library.model.attribute.GraphError.GraphError"]},{"name":"fun GraphProcessor(discoveryPlugin: AbstractDiscoveryPlugin<*>, logger: AbstractLogger = DefaultGraphLogger(), fragmentPatcher: FragmentPatcher = FragmentPatcher(\n        defaultExtension = discoveryPlugin.targetExtension,\n        logger = logger\n    ))","description":"io.github.wax911.library.annotation.processor.GraphProcessor.GraphProcessor","location":"library/io.github.wax911.library.annotation.processor/[android-jvm]-graph-processor/-graph-processor.html","searchKeys":["GraphProcessor","fun GraphProcessor(discoveryPlugin: AbstractDiscoveryPlugin<*>, logger: AbstractLogger = DefaultGraphLogger(), fragmentPatcher: FragmentPatcher = FragmentPatcher(\n        defaultExtension = discoveryPlugin.targetExtension,\n        logger = logger\n    ))","io.github.wax911.library.annotation.processor.GraphProcessor.GraphProcessor"]},{"name":"fun GraphProcessor(discoveryPlugin: AbstractDiscoveryPlugin<*>, logger: AbstractLogger = DefaultGraphLogger(), fragmentPatcher: FragmentPatcher = FragmentPatcher(\n        defaultExtension = discoveryPlugin.targetExtension,\n        logger = logger\n    ))","description":"io.github.wax911.library.annotation.processor.GraphProcessor.GraphProcessor","location":"library/io.github.wax911.library.annotation.processor/[common]-graph-processor/-graph-processor.html","searchKeys":["GraphProcessor","fun GraphProcessor(discoveryPlugin: AbstractDiscoveryPlugin<*>, logger: AbstractLogger = DefaultGraphLogger(), fragmentPatcher: FragmentPatcher = FragmentPatcher(\n        defaultExtension = discoveryPlugin.targetExtension,\n        logger = logger\n    ))","io.github.wax911.library.annotation.processor.GraphProcessor.GraphProcessor"]},{"name":"fun GraphProcessorTest()","description":"io.github.wax911.library.annotation.processor.GraphProcessorTest.GraphProcessorTest","location":"library/io.github.wax911.library.annotation.processor/[android-jvm]-graph-processor-test/-graph-processor-test.html","searchKeys":["GraphProcessorTest","fun GraphProcessorTest()","io.github.wax911.library.annotation.processor.GraphProcessorTest.GraphProcessorTest"]},{"name":"fun GraphProcessorTest()","description":"io.github.wax911.library.annotation.processor.GraphProcessorTest.GraphProcessorTest","location":"library/io.github.wax911.library.annotation.processor/[common]-graph-processor-test/-graph-processor-test.html","searchKeys":["GraphProcessorTest","fun GraphProcessorTest()","io.github.wax911.library.annotation.processor.GraphProcessorTest.GraphProcessorTest"]},{"name":"fun GraphQuery(value: String = \"\")","description":"io.github.wax911.library.annotation.GraphQuery.GraphQuery","location":"library/io.github.wax911.library.annotation/[android-jvm]-graph-query/-graph-query.html","searchKeys":["GraphQuery","fun GraphQuery(value: String = \"\")","io.github.wax911.library.annotation.GraphQuery.GraphQuery"]},{"name":"fun GraphQuery(value: String = \"\")","description":"io.github.wax911.library.annotation.GraphQuery.GraphQuery","location":"library/io.github.wax911.library.annotation/[common]-graph-query/-graph-query.html","searchKeys":["GraphQuery","fun GraphQuery(value: String = \"\")","io.github.wax911.library.annotation.GraphQuery.GraphQuery"]},{"name":"fun GraphRegexUtilTest(operation: Operation)","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.GraphRegexUtilTest","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-graph-regex-util-test/-graph-regex-util-test.html","searchKeys":["GraphRegexUtilTest","fun GraphRegexUtilTest(operation: Operation)","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.GraphRegexUtilTest"]},{"name":"fun GraphRegexUtilTest(operation: Operation)","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.GraphRegexUtilTest","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-graph-regex-util-test/-graph-regex-util-test.html","searchKeys":["GraphRegexUtilTest","fun GraphRegexUtilTest(operation: Operation)","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.GraphRegexUtilTest"]},{"name":"fun GraphRequestConverter(methodAnnotations: Array<out Annotation>, graphProcessor: AbstractGraphProcessor, gson: <ERROR CLASS>)","description":"io.github.wax911.library.converter.request.GraphRequestConverter.GraphRequestConverter","location":"library/io.github.wax911.library.converter.request/[common]-graph-request-converter/-graph-request-converter.html","searchKeys":["GraphRequestConverter","fun GraphRequestConverter(methodAnnotations: Array<out Annotation>, graphProcessor: AbstractGraphProcessor, gson: <ERROR CLASS>)","io.github.wax911.library.converter.request.GraphRequestConverter.GraphRequestConverter"]},{"name":"fun GraphRequestConverter(methodAnnotations: Array<out Annotation>, graphProcessor: AbstractGraphProcessor, gson: Gson)","description":"io.github.wax911.library.converter.request.GraphRequestConverter.GraphRequestConverter","location":"library/io.github.wax911.library.converter.request/[android-jvm]-graph-request-converter/-graph-request-converter.html","searchKeys":["GraphRequestConverter","fun GraphRequestConverter(methodAnnotations: Array<out Annotation>, graphProcessor: AbstractGraphProcessor, gson: Gson)","io.github.wax911.library.converter.request.GraphRequestConverter.GraphRequestConverter"]},{"name":"fun GraphResponseConverter(type: Type?, gson: <ERROR CLASS>)","description":"io.github.wax911.library.converter.response.GraphResponseConverter.GraphResponseConverter","location":"library/io.github.wax911.library.converter.response/[common]-graph-response-converter/-graph-response-converter.html","searchKeys":["GraphResponseConverter","fun GraphResponseConverter(type: Type?, gson: <ERROR CLASS>)","io.github.wax911.library.converter.response.GraphResponseConverter.GraphResponseConverter"]},{"name":"fun GraphResponseConverter(type: Type?, gson: Gson)","description":"io.github.wax911.library.converter.response.GraphResponseConverter.GraphResponseConverter","location":"library/io.github.wax911.library.converter.response/[android-jvm]-graph-response-converter/-graph-response-converter.html","searchKeys":["GraphResponseConverter","fun GraphResponseConverter(type: Type?, gson: Gson)","io.github.wax911.library.converter.response.GraphResponseConverter.GraphResponseConverter"]},{"name":"fun Location(line: Int, column: Int)","description":"io.github.wax911.library.model.attribute.GraphError.Location.Location","location":"library/io.github.wax911.library.model.attribute/[android-jvm]-graph-error/-location/-location.html","searchKeys":["Location","fun Location(line: Int, column: Int)","io.github.wax911.library.model.attribute.GraphError.Location.Location"]},{"name":"fun Location(line: Int, column: Int)","description":"io.github.wax911.library.model.attribute.GraphError.Location.Location","location":"library/io.github.wax911.library.model.attribute/[common]-graph-error/-location/-location.html","searchKeys":["Location","fun Location(line: Int, column: Int)","io.github.wax911.library.model.attribute.GraphError.Location.Location"]},{"name":"fun Operation(typeStr: String, nameStr: String)","description":"io.github.wax911.library.annotation.processor.fragment.Operation.Operation","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-operation/-operation.html","searchKeys":["Operation","fun Operation(typeStr: String, nameStr: String)","io.github.wax911.library.annotation.processor.fragment.Operation.Operation"]},{"name":"fun Operation(typeStr: String, nameStr: String)","description":"io.github.wax911.library.annotation.processor.fragment.Operation.Operation","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-operation/-operation.html","searchKeys":["Operation","fun Operation(typeStr: String, nameStr: String)","io.github.wax911.library.annotation.processor.fragment.Operation.Operation"]},{"name":"fun PersistedQuery(sha256Hash: String, version: Int)","description":"io.github.wax911.library.model.request.PersistedQuery.PersistedQuery","location":"library/io.github.wax911.library.model.request/[android-jvm]-persisted-query/-persisted-query.html","searchKeys":["PersistedQuery","fun PersistedQuery(sha256Hash: String, version: Int)","io.github.wax911.library.model.request.PersistedQuery.PersistedQuery"]},{"name":"fun PersistedQuery(sha256Hash: String, version: Int)","description":"io.github.wax911.library.model.request.PersistedQuery.PersistedQuery","location":"library/io.github.wax911.library.model.request/[common]-persisted-query/-persisted-query.html","searchKeys":["PersistedQuery","fun PersistedQuery(sha256Hash: String, version: Int)","io.github.wax911.library.model.request.PersistedQuery.PersistedQuery"]},{"name":"fun PersistedQueryHashCalculator(context: <ERROR CLASS>)","description":"io.github.wax911.library.persistedquery.PersistedQueryHashCalculator.PersistedQueryHashCalculator","location":"library/io.github.wax911.library.persistedquery/[common]-persisted-query-hash-calculator/-persisted-query-hash-calculator.html","searchKeys":["PersistedQueryHashCalculator","fun PersistedQueryHashCalculator(context: <ERROR CLASS>)","io.github.wax911.library.persistedquery.PersistedQueryHashCalculator.PersistedQueryHashCalculator"]},{"name":"fun PersistedQueryHashCalculator(context: Context)","description":"io.github.wax911.library.persistedquery.PersistedQueryHashCalculator.PersistedQueryHashCalculator","location":"library/io.github.wax911.library.persistedquery/[android-jvm]-persisted-query-hash-calculator/-persisted-query-hash-calculator.html","searchKeys":["PersistedQueryHashCalculator","fun PersistedQueryHashCalculator(context: Context)","io.github.wax911.library.persistedquery.PersistedQueryHashCalculator.PersistedQueryHashCalculator"]},{"name":"fun PersistedQueryUrlParameterBuilder(queryContainer: QueryContainer = QueryContainer(), gson: <ERROR CLASS>)","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder.PersistedQueryUrlParameterBuilder","location":"library/io.github.wax911.library.model.request/[common]-persisted-query-url-parameter-builder/-persisted-query-url-parameter-builder.html","searchKeys":["PersistedQueryUrlParameterBuilder","fun PersistedQueryUrlParameterBuilder(queryContainer: QueryContainer = QueryContainer(), gson: <ERROR CLASS>)","io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder.PersistedQueryUrlParameterBuilder"]},{"name":"fun PersistedQueryUrlParameterBuilder(queryContainer: QueryContainer = QueryContainer(), gson: Gson)","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder.PersistedQueryUrlParameterBuilder","location":"library/io.github.wax911.library.model.request/[android-jvm]-persisted-query-url-parameter-builder/-persisted-query-url-parameter-builder.html","searchKeys":["PersistedQueryUrlParameterBuilder","fun PersistedQueryUrlParameterBuilder(queryContainer: QueryContainer = QueryContainer(), gson: Gson)","io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder.PersistedQueryUrlParameterBuilder"]},{"name":"fun PersistedQueryUrlParameters(extensions: String, operationName: String, variables: String)","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameters.PersistedQueryUrlParameters","location":"library/io.github.wax911.library.model.request/[android-jvm]-persisted-query-url-parameters/-persisted-query-url-parameters.html","searchKeys":["PersistedQueryUrlParameters","fun PersistedQueryUrlParameters(extensions: String, operationName: String, variables: String)","io.github.wax911.library.model.request.PersistedQueryUrlParameters.PersistedQueryUrlParameters"]},{"name":"fun PersistedQueryUrlParameters(extensions: String, operationName: String, variables: String)","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameters.PersistedQueryUrlParameters","location":"library/io.github.wax911.library.model.request/[common]-persisted-query-url-parameters/-persisted-query-url-parameters.html","searchKeys":["PersistedQueryUrlParameters","fun PersistedQueryUrlParameters(extensions: String, operationName: String, variables: String)","io.github.wax911.library.model.request.PersistedQueryUrlParameters.PersistedQueryUrlParameters"]},{"name":"fun QueryContainerBuilder(queryContainer: QueryContainer = QueryContainer())","description":"io.github.wax911.library.model.request.QueryContainerBuilder.QueryContainerBuilder","location":"library/io.github.wax911.library.model.request/[android-jvm]-query-container-builder/-query-container-builder.html","searchKeys":["QueryContainerBuilder","fun QueryContainerBuilder(queryContainer: QueryContainer = QueryContainer())","io.github.wax911.library.model.request.QueryContainerBuilder.QueryContainerBuilder"]},{"name":"fun QueryContainerBuilder(queryContainer: QueryContainer = QueryContainer())","description":"io.github.wax911.library.model.request.QueryContainerBuilder.QueryContainerBuilder","location":"library/io.github.wax911.library.model.request/[common]-query-container-builder/-query-container-builder.html","searchKeys":["QueryContainerBuilder","fun QueryContainerBuilder(queryContainer: QueryContainer = QueryContainer())","io.github.wax911.library.model.request.QueryContainerBuilder.QueryContainerBuilder"]},{"name":"fun RegexFragmentAnalyzer()","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzer.RegexFragmentAnalyzer","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-regex-fragment-analyzer/-regex-fragment-analyzer.html","searchKeys":["RegexFragmentAnalyzer","fun RegexFragmentAnalyzer()","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzer.RegexFragmentAnalyzer"]},{"name":"fun RegexFragmentAnalyzer()","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzer.RegexFragmentAnalyzer","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-regex-fragment-analyzer/-regex-fragment-analyzer.html","searchKeys":["RegexFragmentAnalyzer","fun RegexFragmentAnalyzer()","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzer.RegexFragmentAnalyzer"]},{"name":"fun RegexFragmentAnalyzerTest(operation: Operation)","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.RegexFragmentAnalyzerTest","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-regex-fragment-analyzer-test/-regex-fragment-analyzer-test.html","searchKeys":["RegexFragmentAnalyzerTest","fun RegexFragmentAnalyzerTest(operation: Operation)","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.RegexFragmentAnalyzerTest"]},{"name":"fun RegexFragmentAnalyzerTest(operation: Operation)","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.RegexFragmentAnalyzerTest","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-regex-fragment-analyzer-test/-regex-fragment-analyzer-test.html","searchKeys":["RegexFragmentAnalyzerTest","fun RegexFragmentAnalyzerTest(operation: Operation)","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.RegexFragmentAnalyzerTest"]},{"name":"fun ResourcesDiscoveryPlugin(self: Class<ResourcesDiscoveryPlugin> = ResourcesDiscoveryPlugin::class.java)","description":"io.github.wax911.library.helpers.ResourcesDiscoveryPlugin.ResourcesDiscoveryPlugin","location":"library/io.github.wax911.library.helpers/[android-jvm]-resources-discovery-plugin/-resources-discovery-plugin.html","searchKeys":["ResourcesDiscoveryPlugin","fun ResourcesDiscoveryPlugin(self: Class<ResourcesDiscoveryPlugin> = ResourcesDiscoveryPlugin::class.java)","io.github.wax911.library.helpers.ResourcesDiscoveryPlugin.ResourcesDiscoveryPlugin"]},{"name":"fun ResourcesDiscoveryPlugin(self: Class<ResourcesDiscoveryPlugin> = ResourcesDiscoveryPlugin::class.java)","description":"io.github.wax911.library.helpers.ResourcesDiscoveryPlugin.ResourcesDiscoveryPlugin","location":"library/io.github.wax911.library.helpers/[common]-resources-discovery-plugin/-resources-discovery-plugin.html","searchKeys":["ResourcesDiscoveryPlugin","fun ResourcesDiscoveryPlugin(self: Class<ResourcesDiscoveryPlugin> = ResourcesDiscoveryPlugin::class.java)","io.github.wax911.library.helpers.ResourcesDiscoveryPlugin.ResourcesDiscoveryPlugin"]},{"name":"fun Response<*>?.getError(): List<GraphError>?","description":"io.github.wax911.library.util.getError","location":"library/io.github.wax911.library.util/[android-jvm]get-error.html","searchKeys":["getError","fun Response<*>?.getError(): List<GraphError>?","io.github.wax911.library.util.getError"]},{"name":"fun TestLogger()","description":"io.github.wax911.library.helpers.logger.TestLogger.TestLogger","location":"library/io.github.wax911.library.helpers.logger/[android-jvm]-test-logger/-test-logger.html","searchKeys":["TestLogger","fun TestLogger()","io.github.wax911.library.helpers.logger.TestLogger.TestLogger"]},{"name":"fun TestLogger()","description":"io.github.wax911.library.helpers.logger.TestLogger.TestLogger","location":"library/io.github.wax911.library.helpers.logger/[common]-test-logger/-test-logger.html","searchKeys":["TestLogger","fun TestLogger()","io.github.wax911.library.helpers.logger.TestLogger.TestLogger"]},{"name":"fun assert all annotations can be reference valid graphql files()","description":"io.github.wax911.library.annotation.processor.GraphProcessorTest.assert all annotations can be reference valid graphql files","location":"library/io.github.wax911.library.annotation.processor/[android-jvm]-graph-processor-test/assert all annotations can be reference valid graphql files.html","searchKeys":["assert all annotations can be reference valid graphql files","fun assert all annotations can be reference valid graphql files()","io.github.wax911.library.annotation.processor.GraphProcessorTest.assert all annotations can be reference valid graphql files"]},{"name":"fun assert all annotations can be reference valid graphql files()","description":"io.github.wax911.library.annotation.processor.GraphProcessorTest.assert all annotations can be reference valid graphql files","location":"library/io.github.wax911.library.annotation.processor/[common]-graph-processor-test/assert all annotations can be reference valid graphql files.html","searchKeys":["assert all annotations can be reference valid graphql files","fun assert all annotations can be reference valid graphql files()","io.github.wax911.library.annotation.processor.GraphProcessorTest.assert all annotations can be reference valid graphql files"]},{"name":"fun assert given a log level equal to the current level returns true()","description":"io.github.wax911.library.logger.core.AbstractLoggerTest.assert given a log level equal to the current level returns true","location":"library/io.github.wax911.library.logger.core/[android-jvm]-abstract-logger-test/assert given a log level equal to the current level returns true.html","searchKeys":["assert given a log level equal to the current level returns true","fun assert given a log level equal to the current level returns true()","io.github.wax911.library.logger.core.AbstractLoggerTest.assert given a log level equal to the current level returns true"]},{"name":"fun assert given a log level equal to the current level returns true()","description":"io.github.wax911.library.logger.core.AbstractLoggerTest.assert given a log level equal to the current level returns true","location":"library/io.github.wax911.library.logger.core/[common]-abstract-logger-test/assert given a log level equal to the current level returns true.html","searchKeys":["assert given a log level equal to the current level returns true","fun assert given a log level equal to the current level returns true()","io.github.wax911.library.logger.core.AbstractLoggerTest.assert given a log level equal to the current level returns true"]},{"name":"fun assert given a log level greater than to the logger level returns true()","description":"io.github.wax911.library.logger.core.AbstractLoggerTest.assert given a log level greater than to the logger level returns true","location":"library/io.github.wax911.library.logger.core/[android-jvm]-abstract-logger-test/assert given a log level greater than to the logger level returns true.html","searchKeys":["assert given a log level greater than to the logger level returns true","fun assert given a log level greater than to the logger level returns true()","io.github.wax911.library.logger.core.AbstractLoggerTest.assert given a log level greater than to the logger level returns true"]},{"name":"fun assert given a log level greater than to the logger level returns true()","description":"io.github.wax911.library.logger.core.AbstractLoggerTest.assert given a log level greater than to the logger level returns true","location":"library/io.github.wax911.library.logger.core/[common]-abstract-logger-test/assert given a log level greater than to the logger level returns true.html","searchKeys":["assert given a log level greater than to the logger level returns true","fun assert given a log level greater than to the logger level returns true()","io.github.wax911.library.logger.core.AbstractLoggerTest.assert given a log level greater than to the logger level returns true"]},{"name":"fun assert given a log level less than to the logger level returns false()","description":"io.github.wax911.library.logger.core.AbstractLoggerTest.assert given a log level less than to the logger level returns false","location":"library/io.github.wax911.library.logger.core/[android-jvm]-abstract-logger-test/assert given a log level less than to the logger level returns false.html","searchKeys":["assert given a log level less than to the logger level returns false","fun assert given a log level less than to the logger level returns false()","io.github.wax911.library.logger.core.AbstractLoggerTest.assert given a log level less than to the logger level returns false"]},{"name":"fun assert given a log level less than to the logger level returns false()","description":"io.github.wax911.library.logger.core.AbstractLoggerTest.assert given a log level less than to the logger level returns false","location":"library/io.github.wax911.library.logger.core/[common]-abstract-logger-test/assert given a log level less than to the logger level returns false.html","searchKeys":["assert given a log level less than to the logger level returns false","fun assert given a log level less than to the logger level returns false()","io.github.wax911.library.logger.core.AbstractLoggerTest.assert given a log level less than to the logger level returns false"]},{"name":"fun assure can discover from given resource type()","description":"io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.assure can discover from given resource type","location":"library/io.github.wax911.library.annotation.processor.plugin.contract/[android-jvm]-abstract-discovery-plugin-test/assure can discover from given resource type.html","searchKeys":["assure can discover from given resource type","fun assure can discover from given resource type()","io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.assure can discover from given resource type"]},{"name":"fun assure can discover from given resource type()","description":"io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.assure can discover from given resource type","location":"library/io.github.wax911.library.annotation.processor.plugin.contract/[common]-abstract-discovery-plugin-test/assure can discover from given resource type.html","searchKeys":["assure can discover from given resource type","fun assure can discover from given resource type()","io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.assure can discover from given resource type"]},{"name":"fun assure discovered size is equal to actual files count()","description":"io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.assure discovered size is equal to actual files count","location":"library/io.github.wax911.library.annotation.processor.plugin.contract/[android-jvm]-abstract-discovery-plugin-test/assure discovered size is equal to actual files count.html","searchKeys":["assure discovered size is equal to actual files count","fun assure discovered size is equal to actual files count()","io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.assure discovered size is equal to actual files count"]},{"name":"fun assure discovered size is equal to actual files count()","description":"io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.assure discovered size is equal to actual files count","location":"library/io.github.wax911.library.annotation.processor.plugin.contract/[common]-abstract-discovery-plugin-test/assure discovered size is equal to actual files count.html","searchKeys":["assure discovered size is equal to actual files count","fun assure discovered size is equal to actual files count()","io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.assure discovered size is equal to actual files count"]},{"name":"fun assure multi line contents are loaded properly()","description":"io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.assure multi line contents are loaded properly","location":"library/io.github.wax911.library.annotation.processor.plugin.contract/[android-jvm]-abstract-discovery-plugin-test/assure multi line contents are loaded properly.html","searchKeys":["assure multi line contents are loaded properly","fun assure multi line contents are loaded properly()","io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.assure multi line contents are loaded properly"]},{"name":"fun assure multi line contents are loaded properly()","description":"io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.assure multi line contents are loaded properly","location":"library/io.github.wax911.library.annotation.processor.plugin.contract/[common]-abstract-discovery-plugin-test/assure multi line contents are loaded properly.html","searchKeys":["assure multi line contents are loaded properly","fun assure multi line contents are loaded properly()","io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.assure multi line contents are loaded properly"]},{"name":"fun build(): PersistedQueryUrlParameters","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder.build","location":"library/io.github.wax911.library.model.request/[android-jvm]-persisted-query-url-parameter-builder/build.html","searchKeys":["build","fun build(): PersistedQueryUrlParameters","io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder.build"]},{"name":"fun build(): PersistedQueryUrlParameters","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder.build","location":"library/io.github.wax911.library.model.request/[common]-persisted-query-url-parameter-builder/build.html","searchKeys":["build","fun build(): PersistedQueryUrlParameters","io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder.build"]},{"name":"fun build(): QueryContainer","description":"io.github.wax911.library.model.request.QueryContainerBuilder.build","location":"library/io.github.wax911.library.model.request/[android-jvm]-query-container-builder/build.html","searchKeys":["build","fun build(): QueryContainer","io.github.wax911.library.model.request.QueryContainerBuilder.build"]},{"name":"fun build(): QueryContainer","description":"io.github.wax911.library.model.request.QueryContainerBuilder.build","location":"library/io.github.wax911.library.model.request/[common]-query-container-builder/build.html","searchKeys":["build","fun build(): QueryContainer","io.github.wax911.library.model.request.QueryContainerBuilder.build"]},{"name":"fun containsAnOperation(graphqlContent: String): Boolean","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtil.containsAnOperation","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-graph-regex-util/contains-an-operation.html","searchKeys":["containsAnOperation","fun containsAnOperation(graphqlContent: String): Boolean","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtil.containsAnOperation"]},{"name":"fun containsAnOperation(graphqlContent: String): Boolean","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtil.containsAnOperation","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-graph-regex-util/contains-an-operation.html","searchKeys":["containsAnOperation","fun containsAnOperation(graphqlContent: String): Boolean","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtil.containsAnOperation"]},{"name":"fun containsKey(key: String): Boolean","description":"io.github.wax911.library.model.request.QueryContainerBuilder.containsKey","location":"library/io.github.wax911.library.model.request/[android-jvm]-query-container-builder/contains-key.html","searchKeys":["containsKey","fun containsKey(key: String): Boolean","io.github.wax911.library.model.request.QueryContainerBuilder.containsKey"]},{"name":"fun containsKey(key: String): Boolean","description":"io.github.wax911.library.model.request.QueryContainerBuilder.containsKey","location":"library/io.github.wax911.library.model.request/[common]-query-container-builder/contains-key.html","searchKeys":["containsKey","fun containsKey(key: String): Boolean","io.github.wax911.library.model.request.QueryContainerBuilder.containsKey"]},{"name":"fun create(context: <ERROR CLASS>, gson: <ERROR CLASS>, level: ILogger.Level = ILogger.Level.INFO): GraphConverter","description":"io.github.wax911.library.converter.GraphConverter.Companion.create","location":"library/io.github.wax911.library.converter/[common]-graph-converter/-companion/create.html","searchKeys":["create","fun create(context: <ERROR CLASS>, gson: <ERROR CLASS>, level: ILogger.Level = ILogger.Level.INFO): GraphConverter","io.github.wax911.library.converter.GraphConverter.Companion.create"]},{"name":"fun create(context: <ERROR CLASS>, level: ILogger.Level = ILogger.Level.INFO): GraphConverter","description":"io.github.wax911.library.converter.GraphConverter.Companion.create","location":"library/io.github.wax911.library.converter/[common]-graph-converter/-companion/create.html","searchKeys":["create","fun create(context: <ERROR CLASS>, level: ILogger.Level = ILogger.Level.INFO): GraphConverter","io.github.wax911.library.converter.GraphConverter.Companion.create"]},{"name":"fun create(context: Context, gson: Gson, level: ILogger.Level = ILogger.Level.INFO): GraphConverter","description":"io.github.wax911.library.converter.GraphConverter.Companion.create","location":"library/io.github.wax911.library.converter/[android-jvm]-graph-converter/-companion/create.html","searchKeys":["create","fun create(context: Context, gson: Gson, level: ILogger.Level = ILogger.Level.INFO): GraphConverter","io.github.wax911.library.converter.GraphConverter.Companion.create"]},{"name":"fun create(context: Context, level: ILogger.Level = ILogger.Level.INFO): GraphConverter","description":"io.github.wax911.library.converter.GraphConverter.Companion.create","location":"library/io.github.wax911.library.converter/[android-jvm]-graph-converter/-companion/create.html","searchKeys":["create","fun create(context: Context, level: ILogger.Level = ILogger.Level.INFO): GraphConverter","io.github.wax911.library.converter.GraphConverter.Companion.create"]},{"name":"fun d(tag: String, message: String, throwable: Throwable? = null)","description":"io.github.wax911.library.logger.core.AbstractLogger.d","location":"library/io.github.wax911.library.logger.core/[android-jvm]-abstract-logger/d.html","searchKeys":["d","fun d(tag: String, message: String, throwable: Throwable? = null)","io.github.wax911.library.logger.core.AbstractLogger.d"]},{"name":"fun d(tag: String, message: String, throwable: Throwable? = null)","description":"io.github.wax911.library.logger.core.AbstractLogger.d","location":"library/io.github.wax911.library.logger.core/[common]-abstract-logger/d.html","searchKeys":["d","fun d(tag: String, message: String, throwable: Throwable? = null)","io.github.wax911.library.logger.core.AbstractLogger.d"]},{"name":"fun e(tag: String, message: String, throwable: Throwable? = null)","description":"io.github.wax911.library.logger.core.AbstractLogger.e","location":"library/io.github.wax911.library.logger.core/[android-jvm]-abstract-logger/e.html","searchKeys":["e","fun e(tag: String, message: String, throwable: Throwable? = null)","io.github.wax911.library.logger.core.AbstractLogger.e"]},{"name":"fun e(tag: String, message: String, throwable: Throwable? = null)","description":"io.github.wax911.library.logger.core.AbstractLogger.e","location":"library/io.github.wax911.library.logger.core/[common]-abstract-logger/e.html","searchKeys":["e","fun e(tag: String, message: String, throwable: Throwable? = null)","io.github.wax911.library.logger.core.AbstractLogger.e"]},{"name":"fun enumeration(): <ERROR CLASS>","description":"io.github.wax911.library.annotation.processor.fragment.Operation.Companion.enumeration","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-operation/-companion/enumeration.html","searchKeys":["enumeration","fun enumeration(): <ERROR CLASS>","io.github.wax911.library.annotation.processor.fragment.Operation.Companion.enumeration"]},{"name":"fun enumeration(): List<Operation>","description":"io.github.wax911.library.annotation.processor.fragment.Operation.Companion.enumeration","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-operation/-companion/enumeration.html","searchKeys":["enumeration","fun enumeration(): List<Operation>","io.github.wax911.library.annotation.processor.fragment.Operation.Companion.enumeration"]},{"name":"fun findFragmentDefinitions(graphqlContent: String): Set<String>","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtil.findFragmentDefinitions","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-graph-regex-util/find-fragment-definitions.html","searchKeys":["findFragmentDefinitions","fun findFragmentDefinitions(graphqlContent: String): Set<String>","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtil.findFragmentDefinitions"]},{"name":"fun findFragmentDefinitions(graphqlContent: String): Set<String>","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtil.findFragmentDefinitions","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-graph-regex-util/find-fragment-definitions.html","searchKeys":["findFragmentDefinitions","fun findFragmentDefinitions(graphqlContent: String): Set<String>","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtil.findFragmentDefinitions"]},{"name":"fun findFragmentReferences(graphqlContent: String): Set<String>","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtil.findFragmentReferences","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-graph-regex-util/find-fragment-references.html","searchKeys":["findFragmentReferences","fun findFragmentReferences(graphqlContent: String): Set<String>","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtil.findFragmentReferences"]},{"name":"fun findFragmentReferences(graphqlContent: String): Set<String>","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtil.findFragmentReferences","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-graph-regex-util/find-fragment-references.html","searchKeys":["findFragmentReferences","fun findFragmentReferences(graphqlContent: String): Set<String>","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtil.findFragmentReferences"]},{"name":"fun getInstance(assetManager: <ERROR CLASS>, logger: AbstractLogger = DefaultGraphLogger()): GraphProcessor","description":"io.github.wax911.library.annotation.processor.GraphProcessor.Companion.getInstance","location":"library/io.github.wax911.library.annotation.processor/[common]-graph-processor/-companion/get-instance.html","searchKeys":["getInstance","fun getInstance(assetManager: <ERROR CLASS>, logger: AbstractLogger = DefaultGraphLogger()): GraphProcessor","io.github.wax911.library.annotation.processor.GraphProcessor.Companion.getInstance"]},{"name":"fun getInstance(assetManager: AssetManager, logger: AbstractLogger = DefaultGraphLogger()): GraphProcessor","description":"io.github.wax911.library.annotation.processor.GraphProcessor.Companion.getInstance","location":"library/io.github.wax911.library.annotation.processor/[android-jvm]-graph-processor/-companion/get-instance.html","searchKeys":["getInstance","fun getInstance(assetManager: AssetManager, logger: AbstractLogger = DefaultGraphLogger()): GraphProcessor","io.github.wax911.library.annotation.processor.GraphProcessor.Companion.getInstance"]},{"name":"fun getOrCreateAPQHash(queryName: String): String?","description":"io.github.wax911.library.persistedquery.PersistedQueryHashCalculator.getOrCreateAPQHash","location":"library/io.github.wax911.library.persistedquery/[android-jvm]-persisted-query-hash-calculator/get-or-create-a-p-q-hash.html","searchKeys":["getOrCreateAPQHash","fun getOrCreateAPQHash(queryName: String): String?","io.github.wax911.library.persistedquery.PersistedQueryHashCalculator.getOrCreateAPQHash"]},{"name":"fun getOrCreateAPQHash(queryName: String): String?","description":"io.github.wax911.library.persistedquery.PersistedQueryHashCalculator.getOrCreateAPQHash","location":"library/io.github.wax911.library.persistedquery/[common]-persisted-query-hash-calculator/get-or-create-a-p-q-hash.html","searchKeys":["getOrCreateAPQHash","fun getOrCreateAPQHash(queryName: String): String?","io.github.wax911.library.persistedquery.PersistedQueryHashCalculator.getOrCreateAPQHash"]},{"name":"fun getVariable(key: String): Any?","description":"io.github.wax911.library.model.request.QueryContainerBuilder.getVariable","location":"library/io.github.wax911.library.model.request/[android-jvm]-query-container-builder/get-variable.html","searchKeys":["getVariable","fun getVariable(key: String): Any?","io.github.wax911.library.model.request.QueryContainerBuilder.getVariable"]},{"name":"fun getVariable(key: String): Any?","description":"io.github.wax911.library.model.request.QueryContainerBuilder.getVariable","location":"library/io.github.wax911.library.model.request/[common]-query-container-builder/get-variable.html","searchKeys":["getVariable","fun getVariable(key: String): Any?","io.github.wax911.library.model.request.QueryContainerBuilder.getVariable"]},{"name":"fun given an annotation for finding an issue, assure that a query can be resolved()","description":"io.github.wax911.library.annotation.processor.GraphProcessorTest.given an annotation for finding an issue, assure that a query can be resolved","location":"library/io.github.wax911.library.annotation.processor/[android-jvm]-graph-processor-test/given an annotation for finding an issue, assure that a query can be resolved.html","searchKeys":["given an annotation for finding an issue, assure that a query can be resolved","fun given an annotation for finding an issue, assure that a query can be resolved()","io.github.wax911.library.annotation.processor.GraphProcessorTest.given an annotation for finding an issue, assure that a query can be resolved"]},{"name":"fun given an annotation for finding an issue, assure that a query can be resolved()","description":"io.github.wax911.library.annotation.processor.GraphProcessorTest.given an annotation for finding an issue, assure that a query can be resolved","location":"library/io.github.wax911.library.annotation.processor/[common]-graph-processor-test/given an annotation for finding an issue, assure that a query can be resolved.html","searchKeys":["given an annotation for finding an issue, assure that a query can be resolved","fun given an annotation for finding an issue, assure that a query can be resolved()","io.github.wax911.library.annotation.processor.GraphProcessorTest.given an annotation for finding an issue, assure that a query can be resolved"]},{"name":"fun i(tag: String, message: String, throwable: Throwable? = null)","description":"io.github.wax911.library.logger.core.AbstractLogger.i","location":"library/io.github.wax911.library.logger.core/[android-jvm]-abstract-logger/i.html","searchKeys":["i","fun i(tag: String, message: String, throwable: Throwable? = null)","io.github.wax911.library.logger.core.AbstractLogger.i"]},{"name":"fun i(tag: String, message: String, throwable: Throwable? = null)","description":"io.github.wax911.library.logger.core.AbstractLogger.i","location":"library/io.github.wax911.library.logger.core/[common]-abstract-logger/i.html","searchKeys":["i","fun i(tag: String, message: String, throwable: Throwable? = null)","io.github.wax911.library.logger.core.AbstractLogger.i"]},{"name":"fun includeMissingFragments(graphFile: String, graphContent: String, availableGraphFiles: Map<String, String>, aggregation: StringBuilder = StringBuilder()): String","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcher.includeMissingFragments","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-fragment-patcher/include-missing-fragments.html","searchKeys":["includeMissingFragments","fun includeMissingFragments(graphFile: String, graphContent: String, availableGraphFiles: Map<String, String>, aggregation: StringBuilder = StringBuilder()): String","io.github.wax911.library.annotation.processor.fragment.FragmentPatcher.includeMissingFragments"]},{"name":"fun includeMissingFragments(graphFile: String, graphContent: String, availableGraphFiles: Map<String, String>, aggregation: StringBuilder = StringBuilder()): String","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcher.includeMissingFragments","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-fragment-patcher/include-missing-fragments.html","searchKeys":["includeMissingFragments","fun includeMissingFragments(graphFile: String, graphContent: String, availableGraphFiles: Map<String, String>, aggregation: StringBuilder = StringBuilder()): String","io.github.wax911.library.annotation.processor.fragment.FragmentPatcher.includeMissingFragments"]},{"name":"fun operation(): <ERROR CLASS>","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Companion.operation","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-graph-regex-util-test/-companion/operation.html","searchKeys":["operation","fun operation(): <ERROR CLASS>","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Companion.operation"]},{"name":"fun operation(): <ERROR CLASS>","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Companion.operation","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-regex-fragment-analyzer-test/-companion/operation.html","searchKeys":["operation","fun operation(): <ERROR CLASS>","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Companion.operation"]},{"name":"fun operation(): List<Operation>","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Companion.operation","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-graph-regex-util-test/-companion/operation.html","searchKeys":["operation","fun operation(): List<Operation>","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Companion.operation"]},{"name":"fun operation(): List<Operation>","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Companion.operation","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-regex-fragment-analyzer-test/-companion/operation.html","searchKeys":["operation","fun operation(): List<Operation>","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Companion.operation"]},{"name":"fun putExtension(key: String, value: Any?): QueryContainerBuilder","description":"io.github.wax911.library.model.request.QueryContainerBuilder.putExtension","location":"library/io.github.wax911.library.model.request/[android-jvm]-query-container-builder/put-extension.html","searchKeys":["putExtension","fun putExtension(key: String, value: Any?): QueryContainerBuilder","io.github.wax911.library.model.request.QueryContainerBuilder.putExtension"]},{"name":"fun putExtension(key: String, value: Any?): QueryContainerBuilder","description":"io.github.wax911.library.model.request.QueryContainerBuilder.putExtension","location":"library/io.github.wax911.library.model.request/[common]-query-container-builder/put-extension.html","searchKeys":["putExtension","fun putExtension(key: String, value: Any?): QueryContainerBuilder","io.github.wax911.library.model.request.QueryContainerBuilder.putExtension"]},{"name":"fun putPersistedQueryHash(sha256Hash: String, version: Int = 1): QueryContainerBuilder","description":"io.github.wax911.library.model.request.QueryContainerBuilder.putPersistedQueryHash","location":"library/io.github.wax911.library.model.request/[android-jvm]-query-container-builder/put-persisted-query-hash.html","searchKeys":["putPersistedQueryHash","fun putPersistedQueryHash(sha256Hash: String, version: Int = 1): QueryContainerBuilder","io.github.wax911.library.model.request.QueryContainerBuilder.putPersistedQueryHash"]},{"name":"fun putPersistedQueryHash(sha256Hash: String, version: Int = 1): QueryContainerBuilder","description":"io.github.wax911.library.model.request.QueryContainerBuilder.putPersistedQueryHash","location":"library/io.github.wax911.library.model.request/[common]-query-container-builder/put-persisted-query-hash.html","searchKeys":["putPersistedQueryHash","fun putPersistedQueryHash(sha256Hash: String, version: Int = 1): QueryContainerBuilder","io.github.wax911.library.model.request.QueryContainerBuilder.putPersistedQueryHash"]},{"name":"fun putVariable(key: String, value: Any?): QueryContainerBuilder","description":"io.github.wax911.library.model.request.QueryContainerBuilder.putVariable","location":"library/io.github.wax911.library.model.request/[android-jvm]-query-container-builder/put-variable.html","searchKeys":["putVariable","fun putVariable(key: String, value: Any?): QueryContainerBuilder","io.github.wax911.library.model.request.QueryContainerBuilder.putVariable"]},{"name":"fun putVariable(key: String, value: Any?): QueryContainerBuilder","description":"io.github.wax911.library.model.request.QueryContainerBuilder.putVariable","location":"library/io.github.wax911.library.model.request/[common]-query-container-builder/put-variable.html","searchKeys":["putVariable","fun putVariable(key: String, value: Any?): QueryContainerBuilder","io.github.wax911.library.model.request.QueryContainerBuilder.putVariable"]},{"name":"fun putVariables(values: Map<String, Any?>): QueryContainerBuilder","description":"io.github.wax911.library.model.request.QueryContainerBuilder.putVariables","location":"library/io.github.wax911.library.model.request/[android-jvm]-query-container-builder/put-variables.html","searchKeys":["putVariables","fun putVariables(values: Map<String, Any?>): QueryContainerBuilder","io.github.wax911.library.model.request.QueryContainerBuilder.putVariables"]},{"name":"fun putVariables(values: Map<String, Any?>): QueryContainerBuilder","description":"io.github.wax911.library.model.request.QueryContainerBuilder.putVariables","location":"library/io.github.wax911.library.model.request/[common]-query-container-builder/put-variables.html","searchKeys":["putVariables","fun putVariables(values: Map<String, Any?>): QueryContainerBuilder","io.github.wax911.library.model.request.QueryContainerBuilder.putVariables"]},{"name":"fun setLogLevel(logLevel: LogLevel)","description":"io.github.wax911.library.converter.GraphConverter.setLogLevel","location":"library/io.github.wax911.library.converter/[android-jvm]-graph-converter/set-log-level.html","searchKeys":["setLogLevel","fun setLogLevel(logLevel: LogLevel)","io.github.wax911.library.converter.GraphConverter.setLogLevel"]},{"name":"fun setLogLevel(logLevel: LogLevel)","description":"io.github.wax911.library.converter.GraphConverter.setLogLevel","location":"library/io.github.wax911.library.converter/[common]-graph-converter/set-log-level.html","searchKeys":["setLogLevel","fun setLogLevel(logLevel: LogLevel)","io.github.wax911.library.converter.GraphConverter.setLogLevel"]},{"name":"fun setMinimumLogLevel(level: ILogger.Level)","description":"io.github.wax911.library.converter.GraphConverter.setMinimumLogLevel","location":"library/io.github.wax911.library.converter/[android-jvm]-graph-converter/set-minimum-log-level.html","searchKeys":["setMinimumLogLevel","fun setMinimumLogLevel(level: ILogger.Level)","io.github.wax911.library.converter.GraphConverter.setMinimumLogLevel"]},{"name":"fun setMinimumLogLevel(level: ILogger.Level)","description":"io.github.wax911.library.converter.GraphConverter.setMinimumLogLevel","location":"library/io.github.wax911.library.converter/[common]-graph-converter/set-minimum-log-level.html","searchKeys":["setMinimumLogLevel","fun setMinimumLogLevel(level: ILogger.Level)","io.github.wax911.library.converter.GraphConverter.setMinimumLogLevel"]},{"name":"fun setOperationName(operationName: String?): QueryContainerBuilder","description":"io.github.wax911.library.model.request.QueryContainerBuilder.setOperationName","location":"library/io.github.wax911.library.model.request/[android-jvm]-query-container-builder/set-operation-name.html","searchKeys":["setOperationName","fun setOperationName(operationName: String?): QueryContainerBuilder","io.github.wax911.library.model.request.QueryContainerBuilder.setOperationName"]},{"name":"fun setOperationName(operationName: String?): QueryContainerBuilder","description":"io.github.wax911.library.model.request.QueryContainerBuilder.setOperationName","location":"library/io.github.wax911.library.model.request/[common]-query-container-builder/set-operation-name.html","searchKeys":["setOperationName","fun setOperationName(operationName: String?): QueryContainerBuilder","io.github.wax911.library.model.request.QueryContainerBuilder.setOperationName"]},{"name":"fun setQuery(query: String?): QueryContainerBuilder","description":"io.github.wax911.library.model.request.QueryContainerBuilder.setQuery","location":"library/io.github.wax911.library.model.request/[android-jvm]-query-container-builder/set-query.html","searchKeys":["setQuery","fun setQuery(query: String?): QueryContainerBuilder","io.github.wax911.library.model.request.QueryContainerBuilder.setQuery"]},{"name":"fun setQuery(query: String?): QueryContainerBuilder","description":"io.github.wax911.library.model.request.QueryContainerBuilder.setQuery","location":"library/io.github.wax911.library.model.request/[common]-query-container-builder/set-query.html","searchKeys":["setQuery","fun setQuery(query: String?): QueryContainerBuilder","io.github.wax911.library.model.request.QueryContainerBuilder.setQuery"]},{"name":"fun setUp()","description":"io.github.wax911.library.annotation.processor.GraphProcessorTest.setUp","location":"library/io.github.wax911.library.annotation.processor/[android-jvm]-graph-processor-test/set-up.html","searchKeys":["setUp","fun setUp()","io.github.wax911.library.annotation.processor.GraphProcessorTest.setUp"]},{"name":"fun setUp()","description":"io.github.wax911.library.annotation.processor.GraphProcessorTest.setUp","location":"library/io.github.wax911.library.annotation.processor/[common]-graph-processor-test/set-up.html","searchKeys":["setUp","fun setUp()","io.github.wax911.library.annotation.processor.GraphProcessorTest.setUp"]},{"name":"fun setUp()","description":"io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.setUp","location":"library/io.github.wax911.library.annotation.processor.plugin.contract/[android-jvm]-abstract-discovery-plugin-test/set-up.html","searchKeys":["setUp","fun setUp()","io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.setUp"]},{"name":"fun setUp()","description":"io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.setUp","location":"library/io.github.wax911.library.annotation.processor.plugin.contract/[common]-abstract-discovery-plugin-test/set-up.html","searchKeys":["setUp","fun setUp()","io.github.wax911.library.annotation.processor.plugin.contract.AbstractDiscoveryPluginTest.setUp"]},{"name":"fun v(tag: String, message: String, throwable: Throwable? = null)","description":"io.github.wax911.library.logger.core.AbstractLogger.v","location":"library/io.github.wax911.library.logger.core/[android-jvm]-abstract-logger/v.html","searchKeys":["v","fun v(tag: String, message: String, throwable: Throwable? = null)","io.github.wax911.library.logger.core.AbstractLogger.v"]},{"name":"fun v(tag: String, message: String, throwable: Throwable? = null)","description":"io.github.wax911.library.logger.core.AbstractLogger.v","location":"library/io.github.wax911.library.logger.core/[common]-abstract-logger/v.html","searchKeys":["v","fun v(tag: String, message: String, throwable: Throwable? = null)","io.github.wax911.library.logger.core.AbstractLogger.v"]},{"name":"fun w(tag: String, message: String, throwable: Throwable? = null)","description":"io.github.wax911.library.logger.core.AbstractLogger.w","location":"library/io.github.wax911.library.logger.core/[android-jvm]-abstract-logger/w.html","searchKeys":["w","fun w(tag: String, message: String, throwable: Throwable? = null)","io.github.wax911.library.logger.core.AbstractLogger.w"]},{"name":"fun w(tag: String, message: String, throwable: Throwable? = null)","description":"io.github.wax911.library.logger.core.AbstractLogger.w","location":"library/io.github.wax911.library.logger.core/[common]-abstract-logger/w.html","searchKeys":["w","fun w(tag: String, message: String, throwable: Throwable? = null)","io.github.wax911.library.logger.core.AbstractLogger.w"]},{"name":"interface FragmentAnalyzer","description":"io.github.wax911.library.annotation.processor.fragment.FragmentAnalyzer","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-fragment-analyzer/index.html","searchKeys":["FragmentAnalyzer","interface FragmentAnalyzer","io.github.wax911.library.annotation.processor.fragment.FragmentAnalyzer"]},{"name":"interface FragmentAnalyzer","description":"io.github.wax911.library.annotation.processor.fragment.FragmentAnalyzer","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-fragment-analyzer/index.html","searchKeys":["FragmentAnalyzer","interface FragmentAnalyzer","io.github.wax911.library.annotation.processor.fragment.FragmentAnalyzer"]},{"name":"interface IAutomaticPersistedQuery","description":"io.github.wax911.library.persisted.contract.IAutomaticPersistedQuery","location":"library/io.github.wax911.library.persisted.contract/[android-jvm]-i-automatic-persisted-query/index.html","searchKeys":["IAutomaticPersistedQuery","interface IAutomaticPersistedQuery","io.github.wax911.library.persisted.contract.IAutomaticPersistedQuery"]},{"name":"interface IAutomaticPersistedQuery","description":"io.github.wax911.library.persisted.contract.IAutomaticPersistedQuery","location":"library/io.github.wax911.library.persisted.contract/[common]-i-automatic-persisted-query/index.html","searchKeys":["IAutomaticPersistedQuery","interface IAutomaticPersistedQuery","io.github.wax911.library.persisted.contract.IAutomaticPersistedQuery"]},{"name":"interface ILogger","description":"io.github.wax911.library.logger.contract.ILogger","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/index.html","searchKeys":["ILogger","interface ILogger","io.github.wax911.library.logger.contract.ILogger"]},{"name":"interface ILogger","description":"io.github.wax911.library.logger.contract.ILogger","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/index.html","searchKeys":["ILogger","interface ILogger","io.github.wax911.library.logger.contract.ILogger"]},{"name":"interface MockAnnotationStubs","description":"io.github.wax911.library.helpers.annotations.MockAnnotationStubs","location":"library/io.github.wax911.library.helpers.annotations/[android-jvm]-mock-annotation-stubs/index.html","searchKeys":["MockAnnotationStubs","interface MockAnnotationStubs","io.github.wax911.library.helpers.annotations.MockAnnotationStubs"]},{"name":"interface MockAnnotationStubs","description":"io.github.wax911.library.helpers.annotations.MockAnnotationStubs","location":"library/io.github.wax911.library.helpers.annotations/[common]-mock-annotation-stubs/index.html","searchKeys":["MockAnnotationStubs","interface MockAnnotationStubs","io.github.wax911.library.helpers.annotations.MockAnnotationStubs"]},{"name":"object AutomaticPersistedQueryErrors","description":"io.github.wax911.library.persisted.query.error.AutomaticPersistedQueryErrors","location":"library/io.github.wax911.library.persisted.query.error/[android-jvm]-automatic-persisted-query-errors/index.html","searchKeys":["AutomaticPersistedQueryErrors","object AutomaticPersistedQueryErrors","io.github.wax911.library.persisted.query.error.AutomaticPersistedQueryErrors"]},{"name":"object AutomaticPersistedQueryErrors","description":"io.github.wax911.library.persisted.query.error.AutomaticPersistedQueryErrors","location":"library/io.github.wax911.library.persisted.query.error/[common]-automatic-persisted-query-errors/index.html","searchKeys":["AutomaticPersistedQueryErrors","object AutomaticPersistedQueryErrors","io.github.wax911.library.persisted.query.error.AutomaticPersistedQueryErrors"]},{"name":"object Companion","description":"io.github.wax911.library.annotation.processor.GraphProcessor.Companion","location":"library/io.github.wax911.library.annotation.processor/[android-jvm]-graph-processor/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.annotation.processor.GraphProcessor.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.annotation.processor.GraphProcessor.Companion","location":"library/io.github.wax911.library.annotation.processor/[common]-graph-processor/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.annotation.processor.GraphProcessor.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcher.Companion","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-fragment-patcher/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.annotation.processor.fragment.FragmentPatcher.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.annotation.processor.fragment.FragmentPatcher.Companion","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-fragment-patcher/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.annotation.processor.fragment.FragmentPatcher.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Companion","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-graph-regex-util-test/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Companion","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-graph-regex-util-test/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtilTest.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.annotation.processor.fragment.Operation.Companion","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-operation/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.annotation.processor.fragment.Operation.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.annotation.processor.fragment.Operation.Companion","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-operation/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.annotation.processor.fragment.Operation.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Companion","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-regex-fragment-analyzer-test/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Companion","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-regex-fragment-analyzer-test/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzerTest.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.annotation.processor.plugin.AssetManagerDiscoveryPlugin.Companion","location":"library/io.github.wax911.library.annotation.processor.plugin/[android-jvm]-asset-manager-discovery-plugin/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.annotation.processor.plugin.AssetManagerDiscoveryPlugin.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.annotation.processor.plugin.AssetManagerDiscoveryPlugin.Companion","location":"library/io.github.wax911.library.annotation.processor.plugin/[common]-asset-manager-discovery-plugin/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.annotation.processor.plugin.AssetManagerDiscoveryPlugin.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.converter.GraphConverter.Companion","location":"library/io.github.wax911.library.converter/[android-jvm]-graph-converter/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.converter.GraphConverter.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.converter.GraphConverter.Companion","location":"library/io.github.wax911.library.converter/[common]-graph-converter/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.converter.GraphConverter.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.converter.request.GraphRequestConverter.Companion","location":"library/io.github.wax911.library.converter.request/[android-jvm]-graph-request-converter/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.converter.request.GraphRequestConverter.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.converter.request.GraphRequestConverter.Companion","location":"library/io.github.wax911.library.converter.request/[common]-graph-request-converter/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.converter.request.GraphRequestConverter.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder.Companion","location":"library/io.github.wax911.library.model.request/[android-jvm]-persisted-query-url-parameter-builder/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder.Companion","location":"library/io.github.wax911.library.model.request/[common]-persisted-query-url-parameter-builder/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.model.request.PersistedQueryUrlParameterBuilder.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.model.request.QueryContainerBuilder.Companion","location":"library/io.github.wax911.library.model.request/[android-jvm]-query-container-builder/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.model.request.QueryContainerBuilder.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.model.request.QueryContainerBuilder.Companion","location":"library/io.github.wax911.library.model.request/[common]-query-container-builder/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.model.request.QueryContainerBuilder.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.persisted.query.AutomaticPersistedQueryCalculator.Companion","location":"library/io.github.wax911.library.persisted.query/[android-jvm]-automatic-persisted-query-calculator/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.persisted.query.AutomaticPersistedQueryCalculator.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.persisted.query.AutomaticPersistedQueryCalculator.Companion","location":"library/io.github.wax911.library.persisted.query/[common]-automatic-persisted-query-calculator/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.persisted.query.AutomaticPersistedQueryCalculator.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.persistedquery.PersistedQueryHashCalculator.Companion","location":"library/io.github.wax911.library.persistedquery/[android-jvm]-persisted-query-hash-calculator/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.persistedquery.PersistedQueryHashCalculator.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.persistedquery.PersistedQueryHashCalculator.Companion","location":"library/io.github.wax911.library.persistedquery/[common]-persisted-query-hash-calculator/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.persistedquery.PersistedQueryHashCalculator.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.util.LogLevel.Companion","location":"library/io.github.wax911.library.util/[android-jvm]-log-level/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.util.LogLevel.Companion"]},{"name":"object Companion","description":"io.github.wax911.library.util.LogLevel.Companion","location":"library/io.github.wax911.library.util/[common]-log-level/-companion/index.html","searchKeys":["Companion","object Companion","io.github.wax911.library.util.LogLevel.Companion"]},{"name":"object GraphRegexUtil","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtil","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-graph-regex-util/index.html","searchKeys":["GraphRegexUtil","object GraphRegexUtil","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtil"]},{"name":"object GraphRegexUtil","description":"io.github.wax911.library.annotation.processor.fragment.GraphRegexUtil","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-graph-regex-util/index.html","searchKeys":["GraphRegexUtil","object GraphRegexUtil","io.github.wax911.library.annotation.processor.fragment.GraphRegexUtil"]},{"name":"object PersistedQueryErrors","description":"io.github.wax911.library.persistedquery.PersistedQueryErrors","location":"library/io.github.wax911.library.persistedquery/[android-jvm]-persisted-query-errors/index.html","searchKeys":["PersistedQueryErrors","object PersistedQueryErrors","io.github.wax911.library.persistedquery.PersistedQueryErrors"]},{"name":"object PersistedQueryErrors","description":"io.github.wax911.library.persistedquery.PersistedQueryErrors","location":"library/io.github.wax911.library.persistedquery/[common]-persisted-query-errors/index.html","searchKeys":["PersistedQueryErrors","object PersistedQueryErrors","io.github.wax911.library.persistedquery.PersistedQueryErrors"]},{"name":"open class GraphConverter(graphProcessor: AbstractGraphProcessor, gson: <ERROR CLASS>)","description":"io.github.wax911.library.converter.GraphConverter","location":"library/io.github.wax911.library.converter/[common]-graph-converter/index.html","searchKeys":["GraphConverter","open class GraphConverter(graphProcessor: AbstractGraphProcessor, gson: <ERROR CLASS>)","io.github.wax911.library.converter.GraphConverter"]},{"name":"open class GraphConverter(graphProcessor: AbstractGraphProcessor, gson: Gson) : Converter.Factory","description":"io.github.wax911.library.converter.GraphConverter","location":"library/io.github.wax911.library.converter/[android-jvm]-graph-converter/index.html","searchKeys":["GraphConverter","open class GraphConverter(graphProcessor: AbstractGraphProcessor, gson: Gson) : Converter.Factory","io.github.wax911.library.converter.GraphConverter"]},{"name":"open class GraphRequestConverter(methodAnnotations: Array<out Annotation>, graphProcessor: AbstractGraphProcessor, gson: <ERROR CLASS>)","description":"io.github.wax911.library.converter.request.GraphRequestConverter","location":"library/io.github.wax911.library.converter.request/[common]-graph-request-converter/index.html","searchKeys":["GraphRequestConverter","open class GraphRequestConverter(methodAnnotations: Array<out Annotation>, graphProcessor: AbstractGraphProcessor, gson: <ERROR CLASS>)","io.github.wax911.library.converter.request.GraphRequestConverter"]},{"name":"open class GraphRequestConverter(methodAnnotations: Array<out Annotation>, graphProcessor: AbstractGraphProcessor, gson: Gson) : Converter<QueryContainerBuilder, RequestBody> ","description":"io.github.wax911.library.converter.request.GraphRequestConverter","location":"library/io.github.wax911.library.converter.request/[android-jvm]-graph-request-converter/index.html","searchKeys":["GraphRequestConverter","open class GraphRequestConverter(methodAnnotations: Array<out Annotation>, graphProcessor: AbstractGraphProcessor, gson: Gson) : Converter<QueryContainerBuilder, RequestBody> ","io.github.wax911.library.converter.request.GraphRequestConverter"]},{"name":"open class GraphResponseConverter<T>(type: Type?, gson: <ERROR CLASS>)","description":"io.github.wax911.library.converter.response.GraphResponseConverter","location":"library/io.github.wax911.library.converter.response/[common]-graph-response-converter/index.html","searchKeys":["GraphResponseConverter","open class GraphResponseConverter<T>(type: Type?, gson: <ERROR CLASS>)","io.github.wax911.library.converter.response.GraphResponseConverter"]},{"name":"open class GraphResponseConverter<T>(type: Type?, gson: Gson) : Converter<ResponseBody, T> ","description":"io.github.wax911.library.converter.response.GraphResponseConverter","location":"library/io.github.wax911.library.converter.response/[android-jvm]-graph-response-converter/index.html","searchKeys":["GraphResponseConverter","open class GraphResponseConverter<T>(type: Type?, gson: Gson) : Converter<ResponseBody, T> ","io.github.wax911.library.converter.response.GraphResponseConverter"]},{"name":"open class QueryContainerBuilder(queryContainer: QueryContainer)","description":"io.github.wax911.library.model.request.QueryContainerBuilder","location":"library/io.github.wax911.library.model.request/[common]-query-container-builder/index.html","searchKeys":["QueryContainerBuilder","open class QueryContainerBuilder(queryContainer: QueryContainer)","io.github.wax911.library.model.request.QueryContainerBuilder"]},{"name":"open class QueryContainerBuilder(queryContainer: QueryContainer) : Parcelable","description":"io.github.wax911.library.model.request.QueryContainerBuilder","location":"library/io.github.wax911.library.model.request/[android-jvm]-query-container-builder/index.html","searchKeys":["QueryContainerBuilder","open class QueryContainerBuilder(queryContainer: QueryContainer) : Parcelable","io.github.wax911.library.model.request.QueryContainerBuilder"]},{"name":"open fun convert(containerBuilder: QueryContainerBuilder): <ERROR CLASS>","description":"io.github.wax911.library.converter.request.GraphRequestConverter.convert","location":"library/io.github.wax911.library.converter.request/[common]-graph-request-converter/convert.html","searchKeys":["convert","open fun convert(containerBuilder: QueryContainerBuilder): <ERROR CLASS>","io.github.wax911.library.converter.request.GraphRequestConverter.convert"]},{"name":"open fun convert(responseBody: <ERROR CLASS>): T?","description":"io.github.wax911.library.converter.response.GraphResponseConverter.convert","location":"library/io.github.wax911.library.converter.response/[common]-graph-response-converter/convert.html","searchKeys":["convert","open fun convert(responseBody: <ERROR CLASS>): T?","io.github.wax911.library.converter.response.GraphResponseConverter.convert"]},{"name":"open fun isLoggable(level: ILogger.Level): Boolean","description":"io.github.wax911.library.logger.core.AbstractLogger.isLoggable","location":"library/io.github.wax911.library.logger.core/[android-jvm]-abstract-logger/is-loggable.html","searchKeys":["isLoggable","open fun isLoggable(level: ILogger.Level): Boolean","io.github.wax911.library.logger.core.AbstractLogger.isLoggable"]},{"name":"open fun isLoggable(level: ILogger.Level): Boolean","description":"io.github.wax911.library.logger.core.AbstractLogger.isLoggable","location":"library/io.github.wax911.library.logger.core/[common]-abstract-logger/is-loggable.html","searchKeys":["isLoggable","open fun isLoggable(level: ILogger.Level): Boolean","io.github.wax911.library.logger.core.AbstractLogger.isLoggable"]},{"name":"open fun requestBodyConverter(type: Type, parameterAnnotations: Array<out Annotation>, methodAnnotations: Array<out Annotation>, retrofit: <ERROR CLASS>): <ERROR CLASS><out <ERROR CLASS>, <ERROR CLASS>>?","description":"io.github.wax911.library.converter.GraphConverter.requestBodyConverter","location":"library/io.github.wax911.library.converter/[common]-graph-converter/request-body-converter.html","searchKeys":["requestBodyConverter","open fun requestBodyConverter(type: Type, parameterAnnotations: Array<out Annotation>, methodAnnotations: Array<out Annotation>, retrofit: <ERROR CLASS>): <ERROR CLASS><out <ERROR CLASS>, <ERROR CLASS>>?","io.github.wax911.library.converter.GraphConverter.requestBodyConverter"]},{"name":"open fun responseBodyConverter(type: Type, annotations: Array<out Annotation>, retrofit: <ERROR CLASS>): <ERROR CLASS><<ERROR CLASS>, out <ERROR CLASS>>?","description":"io.github.wax911.library.converter.GraphConverter.responseBodyConverter","location":"library/io.github.wax911.library.converter/[common]-graph-converter/response-body-converter.html","searchKeys":["responseBodyConverter","open fun responseBodyConverter(type: Type, annotations: Array<out Annotation>, retrofit: <ERROR CLASS>): <ERROR CLASS><<ERROR CLASS>, out <ERROR CLASS>>?","io.github.wax911.library.converter.GraphConverter.responseBodyConverter"]},{"name":"open override fun analyzeFragments(graphqlContent: String): Set<FragmentAnalysis>","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzer.analyzeFragments","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-regex-fragment-analyzer/analyze-fragments.html","searchKeys":["analyzeFragments","open override fun analyzeFragments(graphqlContent: String): Set<FragmentAnalysis>","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzer.analyzeFragments"]},{"name":"open override fun analyzeFragments(graphqlContent: String): Set<FragmentAnalysis>","description":"io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzer.analyzeFragments","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-regex-fragment-analyzer/analyze-fragments.html","searchKeys":["analyzeFragments","open override fun analyzeFragments(graphqlContent: String): Set<FragmentAnalysis>","io.github.wax911.library.annotation.processor.fragment.RegexFragmentAnalyzer.analyzeFragments"]},{"name":"open override fun convert(containerBuilder: QueryContainerBuilder): RequestBody","description":"io.github.wax911.library.converter.request.GraphRequestConverter.convert","location":"library/io.github.wax911.library.converter.request/[android-jvm]-graph-request-converter/convert.html","searchKeys":["convert","open override fun convert(containerBuilder: QueryContainerBuilder): RequestBody","io.github.wax911.library.converter.request.GraphRequestConverter.convert"]},{"name":"open override fun convert(responseBody: ResponseBody): T?","description":"io.github.wax911.library.converter.response.GraphResponseConverter.convert","location":"library/io.github.wax911.library.converter.response/[android-jvm]-graph-response-converter/convert.html","searchKeys":["convert","open override fun convert(responseBody: ResponseBody): T?","io.github.wax911.library.converter.response.GraphResponseConverter.convert"]},{"name":"open override fun getOrCreateAPQHash(queryName: String): String?","description":"io.github.wax911.library.persisted.query.AutomaticPersistedQueryCalculator.getOrCreateAPQHash","location":"library/io.github.wax911.library.persisted.query/[android-jvm]-automatic-persisted-query-calculator/get-or-create-a-p-q-hash.html","searchKeys":["getOrCreateAPQHash","open override fun getOrCreateAPQHash(queryName: String): String?","io.github.wax911.library.persisted.query.AutomaticPersistedQueryCalculator.getOrCreateAPQHash"]},{"name":"open override fun getOrCreateAPQHash(queryName: String): String?","description":"io.github.wax911.library.persisted.query.AutomaticPersistedQueryCalculator.getOrCreateAPQHash","location":"library/io.github.wax911.library.persisted.query/[common]-automatic-persisted-query-calculator/get-or-create-a-p-q-hash.html","searchKeys":["getOrCreateAPQHash","open override fun getOrCreateAPQHash(queryName: String): String?","io.github.wax911.library.persisted.query.AutomaticPersistedQueryCalculator.getOrCreateAPQHash"]},{"name":"open override fun getQuery(annotations: Array<out Annotation>): String?","description":"io.github.wax911.library.annotation.processor.GraphProcessor.getQuery","location":"library/io.github.wax911.library.annotation.processor/[android-jvm]-graph-processor/get-query.html","searchKeys":["getQuery","open override fun getQuery(annotations: Array<out Annotation>): String?","io.github.wax911.library.annotation.processor.GraphProcessor.getQuery"]},{"name":"open override fun getQuery(annotations: Array<out Annotation>): String?","description":"io.github.wax911.library.annotation.processor.GraphProcessor.getQuery","location":"library/io.github.wax911.library.annotation.processor/[common]-graph-processor/get-query.html","searchKeys":["getQuery","open override fun getQuery(annotations: Array<out Annotation>): String?","io.github.wax911.library.annotation.processor.GraphProcessor.getQuery"]},{"name":"open override fun log(level: ILogger.Level, tag: String, message: String, throwable: Throwable?)","description":"io.github.wax911.library.helpers.logger.TestLogger.log","location":"library/io.github.wax911.library.helpers.logger/[android-jvm]-test-logger/log.html","searchKeys":["log","open override fun log(level: ILogger.Level, tag: String, message: String, throwable: Throwable?)","io.github.wax911.library.helpers.logger.TestLogger.log"]},{"name":"open override fun log(level: ILogger.Level, tag: String, message: String, throwable: Throwable?)","description":"io.github.wax911.library.helpers.logger.TestLogger.log","location":"library/io.github.wax911.library.helpers.logger/[common]-test-logger/log.html","searchKeys":["log","open override fun log(level: ILogger.Level, tag: String, message: String, throwable: Throwable?)","io.github.wax911.library.helpers.logger.TestLogger.log"]},{"name":"open override fun log(level: ILogger.Level, tag: String, message: String, throwable: Throwable?)","description":"io.github.wax911.library.logger.DefaultGraphLogger.log","location":"library/io.github.wax911.library.logger/[android-jvm]-default-graph-logger/log.html","searchKeys":["log","open override fun log(level: ILogger.Level, tag: String, message: String, throwable: Throwable?)","io.github.wax911.library.logger.DefaultGraphLogger.log"]},{"name":"open override fun log(level: ILogger.Level, tag: String, message: String, throwable: Throwable?)","description":"io.github.wax911.library.logger.DefaultGraphLogger.log","location":"library/io.github.wax911.library.logger/[common]-default-graph-logger/log.html","searchKeys":["log","open override fun log(level: ILogger.Level, tag: String, message: String, throwable: Throwable?)","io.github.wax911.library.logger.DefaultGraphLogger.log"]},{"name":"open override fun requestBodyConverter(type: Type, parameterAnnotations: Array<out Annotation>, methodAnnotations: Array<out Annotation>, retrofit: Retrofit): Converter<*, RequestBody>?","description":"io.github.wax911.library.converter.GraphConverter.requestBodyConverter","location":"library/io.github.wax911.library.converter/[android-jvm]-graph-converter/request-body-converter.html","searchKeys":["requestBodyConverter","open override fun requestBodyConverter(type: Type, parameterAnnotations: Array<out Annotation>, methodAnnotations: Array<out Annotation>, retrofit: Retrofit): Converter<*, RequestBody>?","io.github.wax911.library.converter.GraphConverter.requestBodyConverter"]},{"name":"open override fun responseBodyConverter(type: Type, annotations: Array<out Annotation>, retrofit: Retrofit): Converter<ResponseBody, *>?","description":"io.github.wax911.library.converter.GraphConverter.responseBodyConverter","location":"library/io.github.wax911.library.converter/[android-jvm]-graph-converter/response-body-converter.html","searchKeys":["responseBodyConverter","open override fun responseBodyConverter(type: Type, annotations: Array<out Annotation>, retrofit: Retrofit): Converter<ResponseBody, *>?","io.github.wax911.library.converter.GraphConverter.responseBodyConverter"]},{"name":"open override fun startDiscovery(logger: AbstractLogger): Map<String, String>","description":"io.github.wax911.library.annotation.processor.plugin.AssetManagerDiscoveryPlugin.startDiscovery","location":"library/io.github.wax911.library.annotation.processor.plugin/[android-jvm]-asset-manager-discovery-plugin/start-discovery.html","searchKeys":["startDiscovery","open override fun startDiscovery(logger: AbstractLogger): Map<String, String>","io.github.wax911.library.annotation.processor.plugin.AssetManagerDiscoveryPlugin.startDiscovery"]},{"name":"open override fun startDiscovery(logger: AbstractLogger): Map<String, String>","description":"io.github.wax911.library.annotation.processor.plugin.AssetManagerDiscoveryPlugin.startDiscovery","location":"library/io.github.wax911.library.annotation.processor.plugin/[common]-asset-manager-discovery-plugin/start-discovery.html","searchKeys":["startDiscovery","open override fun startDiscovery(logger: AbstractLogger): Map<String, String>","io.github.wax911.library.annotation.processor.plugin.AssetManagerDiscoveryPlugin.startDiscovery"]},{"name":"open override fun startDiscovery(logger: AbstractLogger): Map<String, String>","description":"io.github.wax911.library.helpers.ResourcesDiscoveryPlugin.startDiscovery","location":"library/io.github.wax911.library.helpers/[android-jvm]-resources-discovery-plugin/start-discovery.html","searchKeys":["startDiscovery","open override fun startDiscovery(logger: AbstractLogger): Map<String, String>","io.github.wax911.library.helpers.ResourcesDiscoveryPlugin.startDiscovery"]},{"name":"open override fun startDiscovery(logger: AbstractLogger): Map<String, String>","description":"io.github.wax911.library.helpers.ResourcesDiscoveryPlugin.startDiscovery","location":"library/io.github.wax911.library.helpers/[common]-resources-discovery-plugin/start-discovery.html","searchKeys":["startDiscovery","open override fun startDiscovery(logger: AbstractLogger): Map<String, String>","io.github.wax911.library.helpers.ResourcesDiscoveryPlugin.startDiscovery"]},{"name":"open override fun toString(): String","description":"io.github.wax911.library.model.attribute.GraphError.toString","location":"library/io.github.wax911.library.model.attribute/[android-jvm]-graph-error/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.wax911.library.model.attribute.GraphError.toString"]},{"name":"open override fun toString(): String","description":"io.github.wax911.library.model.attribute.GraphError.toString","location":"library/io.github.wax911.library.model.attribute/[common]-graph-error/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.wax911.library.model.attribute.GraphError.toString"]},{"name":"open override val graphFiles: Map<String, String>","description":"io.github.wax911.library.annotation.processor.GraphProcessor.graphFiles","location":"library/io.github.wax911.library.annotation.processor/[android-jvm]-graph-processor/graph-files.html","searchKeys":["graphFiles","open override val graphFiles: Map<String, String>","io.github.wax911.library.annotation.processor.GraphProcessor.graphFiles"]},{"name":"open override val graphFiles: Map<String, String>","description":"io.github.wax911.library.annotation.processor.GraphProcessor.graphFiles","location":"library/io.github.wax911.library.annotation.processor/[common]-graph-processor/graph-files.html","searchKeys":["graphFiles","open override val graphFiles: Map<String, String>","io.github.wax911.library.annotation.processor.GraphProcessor.graphFiles"]},{"name":"open override var level: ILogger.Level","description":"io.github.wax911.library.logger.core.AbstractLogger.level","location":"library/io.github.wax911.library.logger.core/[android-jvm]-abstract-logger/level.html","searchKeys":["level","open override var level: ILogger.Level","io.github.wax911.library.logger.core.AbstractLogger.level"]},{"name":"open override var level: ILogger.Level","description":"io.github.wax911.library.logger.core.AbstractLogger.level","location":"library/io.github.wax911.library.logger.core/[common]-abstract-logger/level.html","searchKeys":["level","open override var level: ILogger.Level","io.github.wax911.library.logger.core.AbstractLogger.level"]},{"name":"operator fun compareTo(other: LogLevel): Int","description":"io.github.wax911.library.util.LogLevel.compareTo","location":"library/io.github.wax911.library.util/[android-jvm]-log-level/compare-to.html","searchKeys":["compareTo","operator fun compareTo(other: LogLevel): Int","io.github.wax911.library.util.LogLevel.compareTo"]},{"name":"operator fun compareTo(other: LogLevel): Int","description":"io.github.wax911.library.util.LogLevel.compareTo","location":"library/io.github.wax911.library.util/[common]-log-level/compare-to.html","searchKeys":["compareTo","operator fun compareTo(other: LogLevel): Int","io.github.wax911.library.util.LogLevel.compareTo"]},{"name":"val ASSERT: LogLevel","description":"io.github.wax911.library.util.LogLevel.Companion.ASSERT","location":"library/io.github.wax911.library.util/[android-jvm]-log-level/-companion/-a-s-s-e-r-t.html","searchKeys":["ASSERT","val ASSERT: LogLevel","io.github.wax911.library.util.LogLevel.Companion.ASSERT"]},{"name":"val ASSERT: LogLevel","description":"io.github.wax911.library.util.LogLevel.Companion.ASSERT","location":"library/io.github.wax911.library.util/[common]-log-level/-companion/-a-s-s-e-r-t.html","searchKeys":["ASSERT","val ASSERT: LogLevel","io.github.wax911.library.util.LogLevel.Companion.ASSERT"]},{"name":"val DEBUG: LogLevel","description":"io.github.wax911.library.util.LogLevel.Companion.DEBUG","location":"library/io.github.wax911.library.util/[android-jvm]-log-level/-companion/-d-e-b-u-g.html","searchKeys":["DEBUG","val DEBUG: LogLevel","io.github.wax911.library.util.LogLevel.Companion.DEBUG"]},{"name":"val DEBUG: LogLevel","description":"io.github.wax911.library.util.LogLevel.Companion.DEBUG","location":"library/io.github.wax911.library.util/[common]-log-level/-companion/-d-e-b-u-g.html","searchKeys":["DEBUG","val DEBUG: LogLevel","io.github.wax911.library.util.LogLevel.Companion.DEBUG"]},{"name":"val ERROR: LogLevel","description":"io.github.wax911.library.util.LogLevel.Companion.ERROR","location":"library/io.github.wax911.library.util/[android-jvm]-log-level/-companion/-e-r-r-o-r.html","searchKeys":["ERROR","val ERROR: LogLevel","io.github.wax911.library.util.LogLevel.Companion.ERROR"]},{"name":"val ERROR: LogLevel","description":"io.github.wax911.library.util.LogLevel.Companion.ERROR","location":"library/io.github.wax911.library.util/[common]-log-level/-companion/-e-r-r-o-r.html","searchKeys":["ERROR","val ERROR: LogLevel","io.github.wax911.library.util.LogLevel.Companion.ERROR"]},{"name":"val INFO: LogLevel","description":"io.github.wax911.library.util.LogLevel.Companion.INFO","location":"library/io.github.wax911.library.util/[android-jvm]-log-level/-companion/-i-n-f-o.html","searchKeys":["INFO","val INFO: LogLevel","io.github.wax911.library.util.LogLevel.Companion.INFO"]},{"name":"val INFO: LogLevel","description":"io.github.wax911.library.util.LogLevel.Companion.INFO","location":"library/io.github.wax911.library.util/[common]-log-level/-companion/-i-n-f-o.html","searchKeys":["INFO","val INFO: LogLevel","io.github.wax911.library.util.LogLevel.Companion.INFO"]},{"name":"val VERBOSE: LogLevel","description":"io.github.wax911.library.util.LogLevel.Companion.VERBOSE","location":"library/io.github.wax911.library.util/[android-jvm]-log-level/-companion/-v-e-r-b-o-s-e.html","searchKeys":["VERBOSE","val VERBOSE: LogLevel","io.github.wax911.library.util.LogLevel.Companion.VERBOSE"]},{"name":"val VERBOSE: LogLevel","description":"io.github.wax911.library.util.LogLevel.Companion.VERBOSE","location":"library/io.github.wax911.library.util/[common]-log-level/-companion/-v-e-r-b-o-s-e.html","searchKeys":["VERBOSE","val VERBOSE: LogLevel","io.github.wax911.library.util.LogLevel.Companion.VERBOSE"]},{"name":"val WARN: LogLevel","description":"io.github.wax911.library.util.LogLevel.Companion.WARN","location":"library/io.github.wax911.library.util/[android-jvm]-log-level/-companion/-w-a-r-n.html","searchKeys":["WARN","val WARN: LogLevel","io.github.wax911.library.util.LogLevel.Companion.WARN"]},{"name":"val WARN: LogLevel","description":"io.github.wax911.library.util.LogLevel.Companion.WARN","location":"library/io.github.wax911.library.util/[common]-log-level/-companion/-w-a-r-n.html","searchKeys":["WARN","val WARN: LogLevel","io.github.wax911.library.util.LogLevel.Companion.WARN"]},{"name":"val column: Int","description":"io.github.wax911.library.model.attribute.GraphError.Location.column","location":"library/io.github.wax911.library.model.attribute/[android-jvm]-graph-error/-location/column.html","searchKeys":["column","val column: Int","io.github.wax911.library.model.attribute.GraphError.Location.column"]},{"name":"val column: Int","description":"io.github.wax911.library.model.attribute.GraphError.Location.column","location":"library/io.github.wax911.library.model.attribute/[common]-graph-error/-location/column.html","searchKeys":["column","val column: Int","io.github.wax911.library.model.attribute.GraphError.Location.column"]},{"name":"val data: T? = null","description":"io.github.wax911.library.model.body.GraphContainer.data","location":"library/io.github.wax911.library.model.body/[android-jvm]-graph-container/data.html","searchKeys":["data","val data: T? = null","io.github.wax911.library.model.body.GraphContainer.data"]},{"name":"val data: T? = null","description":"io.github.wax911.library.model.body.GraphContainer.data","location":"library/io.github.wax911.library.model.body/[common]-graph-container/data.html","searchKeys":["data","val data: T? = null","io.github.wax911.library.model.body.GraphContainer.data"]},{"name":"val errors: List<GraphError>? = null","description":"io.github.wax911.library.model.body.GraphContainer.errors","location":"library/io.github.wax911.library.model.body/[android-jvm]-graph-container/errors.html","searchKeys":["errors","val errors: List<GraphError>? = null","io.github.wax911.library.model.body.GraphContainer.errors"]},{"name":"val errors: List<GraphError>? = null","description":"io.github.wax911.library.model.body.GraphContainer.errors","location":"library/io.github.wax911.library.model.body/[common]-graph-container/errors.html","searchKeys":["errors","val errors: List<GraphError>? = null","io.github.wax911.library.model.body.GraphContainer.errors"]},{"name":"val extensions: Map<Any, Any>? = null","description":"io.github.wax911.library.model.body.GraphContainer.extensions","location":"library/io.github.wax911.library.model.body/[android-jvm]-graph-container/extensions.html","searchKeys":["extensions","val extensions: Map<Any, Any>? = null","io.github.wax911.library.model.body.GraphContainer.extensions"]},{"name":"val extensions: Map<Any, Any>? = null","description":"io.github.wax911.library.model.body.GraphContainer.extensions","location":"library/io.github.wax911.library.model.body/[common]-graph-container/extensions.html","searchKeys":["extensions","val extensions: Map<Any, Any>? = null","io.github.wax911.library.model.body.GraphContainer.extensions"]},{"name":"val extensions: Map<String, Any?>? = null","description":"io.github.wax911.library.model.attribute.GraphError.extensions","location":"library/io.github.wax911.library.model.attribute/[android-jvm]-graph-error/extensions.html","searchKeys":["extensions","val extensions: Map<String, Any?>? = null","io.github.wax911.library.model.attribute.GraphError.extensions"]},{"name":"val extensions: Map<String, Any?>? = null","description":"io.github.wax911.library.model.attribute.GraphError.extensions","location":"library/io.github.wax911.library.model.attribute/[common]-graph-error/extensions.html","searchKeys":["extensions","val extensions: Map<String, Any?>? = null","io.github.wax911.library.model.attribute.GraphError.extensions"]},{"name":"val extensions: MutableMap<String, Any?>","description":"io.github.wax911.library.model.request.QueryContainer.extensions","location":"library/io.github.wax911.library.model.request/[android-jvm]-query-container/extensions.html","searchKeys":["extensions","val extensions: MutableMap<String, Any?>","io.github.wax911.library.model.request.QueryContainer.extensions"]},{"name":"val extensions: MutableMap<String, Any?>","description":"io.github.wax911.library.model.request.QueryContainer.extensions","location":"library/io.github.wax911.library.model.request/[common]-query-container/extensions.html","searchKeys":["extensions","val extensions: MutableMap<String, Any?>","io.github.wax911.library.model.request.QueryContainer.extensions"]},{"name":"val extensions: String","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameters.extensions","location":"library/io.github.wax911.library.model.request/[android-jvm]-persisted-query-url-parameters/extensions.html","searchKeys":["extensions","val extensions: String","io.github.wax911.library.model.request.PersistedQueryUrlParameters.extensions"]},{"name":"val extensions: String","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameters.extensions","location":"library/io.github.wax911.library.model.request/[common]-persisted-query-url-parameters/extensions.html","searchKeys":["extensions","val extensions: String","io.github.wax911.library.model.request.PersistedQueryUrlParameters.extensions"]},{"name":"val fragmentReference: String","description":"io.github.wax911.library.annotation.processor.fragment.FragmentAnalysis.fragmentReference","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-fragment-analysis/fragment-reference.html","searchKeys":["fragmentReference","val fragmentReference: String","io.github.wax911.library.annotation.processor.fragment.FragmentAnalysis.fragmentReference"]},{"name":"val fragmentReference: String","description":"io.github.wax911.library.annotation.processor.fragment.FragmentAnalysis.fragmentReference","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-fragment-analysis/fragment-reference.html","searchKeys":["fragmentReference","val fragmentReference: String","io.github.wax911.library.annotation.processor.fragment.FragmentAnalysis.fragmentReference"]},{"name":"val isDefined: Boolean","description":"io.github.wax911.library.annotation.processor.fragment.FragmentAnalysis.isDefined","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-fragment-analysis/is-defined.html","searchKeys":["isDefined","val isDefined: Boolean","io.github.wax911.library.annotation.processor.fragment.FragmentAnalysis.isDefined"]},{"name":"val isDefined: Boolean","description":"io.github.wax911.library.annotation.processor.fragment.FragmentAnalysis.isDefined","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-fragment-analysis/is-defined.html","searchKeys":["isDefined","val isDefined: Boolean","io.github.wax911.library.annotation.processor.fragment.FragmentAnalysis.isDefined"]},{"name":"val line: Int","description":"io.github.wax911.library.model.attribute.GraphError.Location.line","location":"library/io.github.wax911.library.model.attribute/[android-jvm]-graph-error/-location/line.html","searchKeys":["line","val line: Int","io.github.wax911.library.model.attribute.GraphError.Location.line"]},{"name":"val line: Int","description":"io.github.wax911.library.model.attribute.GraphError.Location.line","location":"library/io.github.wax911.library.model.attribute/[common]-graph-error/-location/line.html","searchKeys":["line","val line: Int","io.github.wax911.library.model.attribute.GraphError.Location.line"]},{"name":"val locations: List<GraphError.Location>? = null","description":"io.github.wax911.library.model.attribute.GraphError.locations","location":"library/io.github.wax911.library.model.attribute/[android-jvm]-graph-error/locations.html","searchKeys":["locations","val locations: List<GraphError.Location>? = null","io.github.wax911.library.model.attribute.GraphError.locations"]},{"name":"val locations: List<GraphError.Location>? = null","description":"io.github.wax911.library.model.attribute.GraphError.locations","location":"library/io.github.wax911.library.model.attribute/[common]-graph-error/locations.html","searchKeys":["locations","val locations: List<GraphError.Location>? = null","io.github.wax911.library.model.attribute.GraphError.locations"]},{"name":"val message: String?","description":"io.github.wax911.library.model.attribute.GraphError.message","location":"library/io.github.wax911.library.model.attribute/[android-jvm]-graph-error/message.html","searchKeys":["message","val message: String?","io.github.wax911.library.model.attribute.GraphError.message"]},{"name":"val message: String?","description":"io.github.wax911.library.model.attribute.GraphError.message","location":"library/io.github.wax911.library.model.attribute/[common]-graph-error/message.html","searchKeys":["message","val message: String?","io.github.wax911.library.model.attribute.GraphError.message"]},{"name":"val name: String","description":"io.github.wax911.library.logger.contract.ILogger.Level.DEBUG.name","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/-d-e-b-u-g/name.html","searchKeys":["name","val name: String","io.github.wax911.library.logger.contract.ILogger.Level.DEBUG.name"]},{"name":"val name: String","description":"io.github.wax911.library.logger.contract.ILogger.Level.DEBUG.name","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/-d-e-b-u-g/name.html","searchKeys":["name","val name: String","io.github.wax911.library.logger.contract.ILogger.Level.DEBUG.name"]},{"name":"val name: String","description":"io.github.wax911.library.logger.contract.ILogger.Level.ERROR.name","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/-e-r-r-o-r/name.html","searchKeys":["name","val name: String","io.github.wax911.library.logger.contract.ILogger.Level.ERROR.name"]},{"name":"val name: String","description":"io.github.wax911.library.logger.contract.ILogger.Level.ERROR.name","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/-e-r-r-o-r/name.html","searchKeys":["name","val name: String","io.github.wax911.library.logger.contract.ILogger.Level.ERROR.name"]},{"name":"val name: String","description":"io.github.wax911.library.logger.contract.ILogger.Level.INFO.name","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/-i-n-f-o/name.html","searchKeys":["name","val name: String","io.github.wax911.library.logger.contract.ILogger.Level.INFO.name"]},{"name":"val name: String","description":"io.github.wax911.library.logger.contract.ILogger.Level.INFO.name","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/-i-n-f-o/name.html","searchKeys":["name","val name: String","io.github.wax911.library.logger.contract.ILogger.Level.INFO.name"]},{"name":"val name: String","description":"io.github.wax911.library.logger.contract.ILogger.Level.NONE.name","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/-n-o-n-e/name.html","searchKeys":["name","val name: String","io.github.wax911.library.logger.contract.ILogger.Level.NONE.name"]},{"name":"val name: String","description":"io.github.wax911.library.logger.contract.ILogger.Level.NONE.name","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/-n-o-n-e/name.html","searchKeys":["name","val name: String","io.github.wax911.library.logger.contract.ILogger.Level.NONE.name"]},{"name":"val name: String","description":"io.github.wax911.library.logger.contract.ILogger.Level.VERBOSE.name","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/-v-e-r-b-o-s-e/name.html","searchKeys":["name","val name: String","io.github.wax911.library.logger.contract.ILogger.Level.VERBOSE.name"]},{"name":"val name: String","description":"io.github.wax911.library.logger.contract.ILogger.Level.VERBOSE.name","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/-v-e-r-b-o-s-e/name.html","searchKeys":["name","val name: String","io.github.wax911.library.logger.contract.ILogger.Level.VERBOSE.name"]},{"name":"val name: String","description":"io.github.wax911.library.logger.contract.ILogger.Level.WARNING.name","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/-w-a-r-n-i-n-g/name.html","searchKeys":["name","val name: String","io.github.wax911.library.logger.contract.ILogger.Level.WARNING.name"]},{"name":"val name: String","description":"io.github.wax911.library.logger.contract.ILogger.Level.WARNING.name","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/-w-a-r-n-i-n-g/name.html","searchKeys":["name","val name: String","io.github.wax911.library.logger.contract.ILogger.Level.WARNING.name"]},{"name":"val nameStr: String","description":"io.github.wax911.library.annotation.processor.fragment.Operation.nameStr","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-operation/name-str.html","searchKeys":["nameStr","val nameStr: String","io.github.wax911.library.annotation.processor.fragment.Operation.nameStr"]},{"name":"val nameStr: String","description":"io.github.wax911.library.annotation.processor.fragment.Operation.nameStr","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-operation/name-str.html","searchKeys":["nameStr","val nameStr: String","io.github.wax911.library.annotation.processor.fragment.Operation.nameStr"]},{"name":"val operationName: String","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameters.operationName","location":"library/io.github.wax911.library.model.request/[android-jvm]-persisted-query-url-parameters/operation-name.html","searchKeys":["operationName","val operationName: String","io.github.wax911.library.model.request.PersistedQueryUrlParameters.operationName"]},{"name":"val operationName: String","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameters.operationName","location":"library/io.github.wax911.library.model.request/[common]-persisted-query-url-parameters/operation-name.html","searchKeys":["operationName","val operationName: String","io.github.wax911.library.model.request.PersistedQueryUrlParameters.operationName"]},{"name":"val ordinal: Int","description":"io.github.wax911.library.logger.contract.ILogger.Level.DEBUG.ordinal","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/-d-e-b-u-g/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.wax911.library.logger.contract.ILogger.Level.DEBUG.ordinal"]},{"name":"val ordinal: Int","description":"io.github.wax911.library.logger.contract.ILogger.Level.DEBUG.ordinal","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/-d-e-b-u-g/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.wax911.library.logger.contract.ILogger.Level.DEBUG.ordinal"]},{"name":"val ordinal: Int","description":"io.github.wax911.library.logger.contract.ILogger.Level.ERROR.ordinal","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/-e-r-r-o-r/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.wax911.library.logger.contract.ILogger.Level.ERROR.ordinal"]},{"name":"val ordinal: Int","description":"io.github.wax911.library.logger.contract.ILogger.Level.ERROR.ordinal","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/-e-r-r-o-r/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.wax911.library.logger.contract.ILogger.Level.ERROR.ordinal"]},{"name":"val ordinal: Int","description":"io.github.wax911.library.logger.contract.ILogger.Level.INFO.ordinal","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/-i-n-f-o/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.wax911.library.logger.contract.ILogger.Level.INFO.ordinal"]},{"name":"val ordinal: Int","description":"io.github.wax911.library.logger.contract.ILogger.Level.INFO.ordinal","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/-i-n-f-o/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.wax911.library.logger.contract.ILogger.Level.INFO.ordinal"]},{"name":"val ordinal: Int","description":"io.github.wax911.library.logger.contract.ILogger.Level.NONE.ordinal","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/-n-o-n-e/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.wax911.library.logger.contract.ILogger.Level.NONE.ordinal"]},{"name":"val ordinal: Int","description":"io.github.wax911.library.logger.contract.ILogger.Level.NONE.ordinal","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/-n-o-n-e/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.wax911.library.logger.contract.ILogger.Level.NONE.ordinal"]},{"name":"val ordinal: Int","description":"io.github.wax911.library.logger.contract.ILogger.Level.VERBOSE.ordinal","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/-v-e-r-b-o-s-e/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.wax911.library.logger.contract.ILogger.Level.VERBOSE.ordinal"]},{"name":"val ordinal: Int","description":"io.github.wax911.library.logger.contract.ILogger.Level.VERBOSE.ordinal","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/-v-e-r-b-o-s-e/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.wax911.library.logger.contract.ILogger.Level.VERBOSE.ordinal"]},{"name":"val ordinal: Int","description":"io.github.wax911.library.logger.contract.ILogger.Level.WARNING.ordinal","location":"library/io.github.wax911.library.logger.contract/[android-jvm]-i-logger/-level/-w-a-r-n-i-n-g/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.wax911.library.logger.contract.ILogger.Level.WARNING.ordinal"]},{"name":"val ordinal: Int","description":"io.github.wax911.library.logger.contract.ILogger.Level.WARNING.ordinal","location":"library/io.github.wax911.library.logger.contract/[common]-i-logger/-level/-w-a-r-n-i-n-g/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.wax911.library.logger.contract.ILogger.Level.WARNING.ordinal"]},{"name":"val path: List<Any>? = null","description":"io.github.wax911.library.model.attribute.GraphError.path","location":"library/io.github.wax911.library.model.attribute/[android-jvm]-graph-error/path.html","searchKeys":["path","val path: List<Any>? = null","io.github.wax911.library.model.attribute.GraphError.path"]},{"name":"val path: List<Any>? = null","description":"io.github.wax911.library.model.attribute.GraphError.path","location":"library/io.github.wax911.library.model.attribute/[common]-graph-error/path.html","searchKeys":["path","val path: List<Any>? = null","io.github.wax911.library.model.attribute.GraphError.path"]},{"name":"val sha256Hash: String","description":"io.github.wax911.library.model.request.PersistedQuery.sha256Hash","location":"library/io.github.wax911.library.model.request/[android-jvm]-persisted-query/sha256-hash.html","searchKeys":["sha256Hash","val sha256Hash: String","io.github.wax911.library.model.request.PersistedQuery.sha256Hash"]},{"name":"val sha256Hash: String","description":"io.github.wax911.library.model.request.PersistedQuery.sha256Hash","location":"library/io.github.wax911.library.model.request/[common]-persisted-query/sha256-hash.html","searchKeys":["sha256Hash","val sha256Hash: String","io.github.wax911.library.model.request.PersistedQuery.sha256Hash"]},{"name":"val typeStr: String","description":"io.github.wax911.library.annotation.processor.fragment.Operation.typeStr","location":"library/io.github.wax911.library.annotation.processor.fragment/[android-jvm]-operation/type-str.html","searchKeys":["typeStr","val typeStr: String","io.github.wax911.library.annotation.processor.fragment.Operation.typeStr"]},{"name":"val typeStr: String","description":"io.github.wax911.library.annotation.processor.fragment.Operation.typeStr","location":"library/io.github.wax911.library.annotation.processor.fragment/[common]-operation/type-str.html","searchKeys":["typeStr","val typeStr: String","io.github.wax911.library.annotation.processor.fragment.Operation.typeStr"]},{"name":"val value: String","description":"io.github.wax911.library.annotation.GraphQuery.value","location":"library/io.github.wax911.library.annotation/[android-jvm]-graph-query/value.html","searchKeys":["value","val value: String","io.github.wax911.library.annotation.GraphQuery.value"]},{"name":"val value: String","description":"io.github.wax911.library.annotation.GraphQuery.value","location":"library/io.github.wax911.library.annotation/[common]-graph-query/value.html","searchKeys":["value","val value: String","io.github.wax911.library.annotation.GraphQuery.value"]},{"name":"val variables: MutableMap<String, Any?>","description":"io.github.wax911.library.model.request.QueryContainer.variables","location":"library/io.github.wax911.library.model.request/[android-jvm]-query-container/variables.html","searchKeys":["variables","val variables: MutableMap<String, Any?>","io.github.wax911.library.model.request.QueryContainer.variables"]},{"name":"val variables: MutableMap<String, Any?>","description":"io.github.wax911.library.model.request.QueryContainer.variables","location":"library/io.github.wax911.library.model.request/[common]-query-container/variables.html","searchKeys":["variables","val variables: MutableMap<String, Any?>","io.github.wax911.library.model.request.QueryContainer.variables"]},{"name":"val variables: String","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameters.variables","location":"library/io.github.wax911.library.model.request/[android-jvm]-persisted-query-url-parameters/variables.html","searchKeys":["variables","val variables: String","io.github.wax911.library.model.request.PersistedQueryUrlParameters.variables"]},{"name":"val variables: String","description":"io.github.wax911.library.model.request.PersistedQueryUrlParameters.variables","location":"library/io.github.wax911.library.model.request/[common]-persisted-query-url-parameters/variables.html","searchKeys":["variables","val variables: String","io.github.wax911.library.model.request.PersistedQueryUrlParameters.variables"]},{"name":"val version: Int","description":"io.github.wax911.library.model.request.PersistedQuery.version","location":"library/io.github.wax911.library.model.request/[android-jvm]-persisted-query/version.html","searchKeys":["version","val version: Int","io.github.wax911.library.model.request.PersistedQuery.version"]},{"name":"val version: Int","description":"io.github.wax911.library.model.request.PersistedQuery.version","location":"library/io.github.wax911.library.model.request/[common]-persisted-query/version.html","searchKeys":["version","val version: Int","io.github.wax911.library.model.request.PersistedQuery.version"]},{"name":"var operationName: String? = null","description":"io.github.wax911.library.model.request.QueryContainer.operationName","location":"library/io.github.wax911.library.model.request/[android-jvm]-query-container/operation-name.html","searchKeys":["operationName","var operationName: String? = null","io.github.wax911.library.model.request.QueryContainer.operationName"]},{"name":"var operationName: String? = null","description":"io.github.wax911.library.model.request.QueryContainer.operationName","location":"library/io.github.wax911.library.model.request/[common]-query-container/operation-name.html","searchKeys":["operationName","var operationName: String? = null","io.github.wax911.library.model.request.QueryContainer.operationName"]},{"name":"var query: String? = null","description":"io.github.wax911.library.model.request.QueryContainer.query","location":"library/io.github.wax911.library.model.request/[android-jvm]-query-container/query.html","searchKeys":["query","var query: String? = null","io.github.wax911.library.model.request.QueryContainer.query"]},{"name":"var query: String? = null","description":"io.github.wax911.library.model.request.QueryContainer.query","location":"library/io.github.wax911.library.model.request/[common]-query-container/query.html","searchKeys":["query","var query: String? = null","io.github.wax911.library.model.request.QueryContainer.query"]}]
